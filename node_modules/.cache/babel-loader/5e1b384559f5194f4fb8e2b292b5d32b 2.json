{"ast":null,"code":"import * as Yup from 'yup';\nconst regx = {\n  emails: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}+$/\n  // i.test(values.email)\n};\nexport const schemas = {\n  custom: Yup.object().shape({\n    email\n    // password,\n  })\n};\nconst email = Yup.string().matches(regx.emails, 'Не правильный формат email адреса').required('Не может быть пустым');\n// const password = Yup.number()\n//       .min(6, 'не менее 6 цифр')\n//       .max(12, 'не более 12 цифр')\n//       .matches(regx.password, 'Не правильный формат пароля')\n//       .required('Не может быть пустым')\n\nexport const initialValues = {\n  email: \"\"\n  //password: \"\",\n};","map":{"version":3,"names":["Yup","regx","emails","schemas","custom","object","shape","email","string","matches","required","initialValues"],"sources":["/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/forms/helper.js"],"sourcesContent":["import * as Yup from 'yup'\n\nconst regx = {\n      emails: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}+$/,\n      // i.test(values.email)\n}\n\nexport const schemas = {\n      custom: Yup.object().shape({\n            email,\n            // password,\n\n      })\n}\nconst email = Yup.string()\n      .matches(regx.emails, 'Не правильный формат email адреса')\n      .required('Не может быть пустым')\n// const password = Yup.number()\n//       .min(6, 'не менее 6 цифр')\n//       .max(12, 'не более 12 цифр')\n//       .matches(regx.password, 'Не правильный формат пароля')\n//       .required('Не может быть пустым')\n\n\nexport const initialValues = {\n      email: \"\",\n      //password: \"\",\n}\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAE1B,MAAMC,IAAI,GAAG;EACPC,MAAM,EAAE;EACR;AACN,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG;EACjBC,MAAM,EAAEJ,GAAG,CAACK,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;IACrBC;IACA;EAEN,CAAC;AACP,CAAC;AACD,MAAMA,KAAK,GAAGP,GAAG,CAACQ,MAAM,CAAC,CAAC,CACnBC,OAAO,CAACR,IAAI,CAACC,MAAM,EAAE,mCAAmC,CAAC,CACzDQ,QAAQ,CAAC,sBAAsB,CAAC;AACvC;AACA;AACA;AACA;AACA;;AAGA,OAAO,MAAMC,aAAa,GAAG;EACvBJ,KAAK,EAAE;EACP;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}