{"ast":null,"code":"var _jsxFileName = \"/Users/maximih1108/Desktop/\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442/App_DZ_Form/src/components/elevator/ButtonLevel.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nimport './ButtonLevel.scss';\nimport { current } from '@reduxjs/toolkit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonLevel = props => {\n  _s();\n  const {\n    children,\n    id,\n    classes\n  } = props;\n  const [styles, setStyles] = useState(\"level\");\n  const refButton = useRef();\n  console.log(refButton);\n  const focusLevel = () => {\n    refButton.map(item => {\n      //item.remove.classList('level_active')\n    });\n    //item.add.classList('level_active')\n  };\n  const callingElevator = e => {\n    if (id) {\n      setStyles(\"level level_active\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        callingElevator(e);\n        focusLevel(e);\n      },\n      id: id,\n      className: styles,\n      ref: refButton,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }, this);\n};\n_s(ButtonLevel, \"7vF5nB580OYlJ673ZxK2e/bpAbo=\");\n_c = ButtonLevel;\nexport default ButtonLevel;\n//level_active\nvar _c;\n$RefreshReg$(_c, \"ButtonLevel\");","map":{"version":3,"names":["useState","useRef","current","jsxDEV","_jsxDEV","ButtonLevel","props","_s","children","id","classes","styles","setStyles","refButton","console","log","focusLevel","map","item","callingElevator","e","onClick","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/elevator/ButtonLevel.js"],"sourcesContent":["\nimport { useState, useRef } from 'react';\nimport './ButtonLevel.scss'\nimport { current } from '@reduxjs/toolkit';\n\n\nconst ButtonLevel = (props) => {\n      const { children, id, classes } = props\n      const [styles, setStyles] = useState(\"level\")\n\n\n\n\n      const refButton = useRef()\n      console.log(refButton);\n\n      const focusLevel = () => {\n            refButton.map((item) => {\n                  //item.remove.classList('level_active')\n            }\n            )\n            //item.add.classList('level_active')\n      }\n\n      const callingElevator = (e) => {\n\n            if (id) {\n                  setStyles(\"level level_active\")\n            }\n\n      }\n\n      return (\n            <div>\n                  <button onClick={(e) => {\n                        callingElevator(e)\n                        focusLevel(e)\n                  }}\n                        id={id}\n                        className={styles}\n                        ref={refButton}>{children}</button>\n            </div>\n      );\n}\n\nexport default ButtonLevel;\n//level_active\n"],"mappings":";;AACA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,OAAO,oBAAoB;AAC3B,SAASC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACzB,MAAM;IAAEC,QAAQ;IAAEC,EAAE;IAAEC;EAAQ,CAAC,GAAGJ,KAAK;EACvC,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,OAAO,CAAC;EAK7C,MAAMa,SAAS,GAAGZ,MAAM,CAAC,CAAC;EAC1Ba,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;EAEtB,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACnBH,SAAS,CAACI,GAAG,CAAEC,IAAI,IAAK;MAClB;IAAA,CAEN,CAAC;IACD;EACN,CAAC;EAED,MAAMC,eAAe,GAAIC,CAAC,IAAK;IAEzB,IAAIX,EAAE,EAAE;MACFG,SAAS,CAAC,oBAAoB,CAAC;IACrC;EAEN,CAAC;EAED,oBACMR,OAAA;IAAAI,QAAA,eACMJ,OAAA;MAAQiB,OAAO,EAAGD,CAAC,IAAK;QAClBD,eAAe,CAACC,CAAC,CAAC;QAClBJ,UAAU,CAACI,CAAC,CAAC;MACnB,CAAE;MACIX,EAAE,EAAEA,EAAG;MACPa,SAAS,EAAEX,MAAO;MAClBY,GAAG,EAAEV,SAAU;MAAAL,QAAA,EAAEA;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAElB,CAAC;AAAApB,EAAA,CArCKF,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAuCjB,eAAeA,WAAW;AAC1B;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}