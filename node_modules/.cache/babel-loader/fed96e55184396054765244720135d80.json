{"ast":null,"code":"var _jsxFileName = \"/Users/maximih1108/Desktop/\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442/App_DZ_Form/src/components/heroesFilters/HeroesFilters.js\",\n  _s = $RefreshSig$();\n// Задача для этого компонента:\n// Фильтры должны формироваться на основании загруженных данных\n// Фильтры должны отображать только нужных героев при выборе\n// Активный фильтр имеет класс active\n// Изменять json-файл для удобства МОЖНО!\n// Представьте, что вы попросили бэкенд-разработчика об этом\nimport { useHttp } from '../../hooks/http.hook';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { heroesFilter } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeroesFilters = () => {\n  _s();\n  const {\n    request\n  } = useHttp();\n  const [stateButtons, setstateButtons] = useState([]);\n  const {\n    heroes\n  } = useSelector(state => state);\n  const [category, setCategory] = useState(\"\");\n  const dispath = useDispatch();\n  useEffect(() => {\n    request(\"http://localhost:3001/filters\").then(data => setstateButtons(data));\n    renderFilter(heroes);\n  }, [category]);\n  const activeButtonCategory = e => {\n    setCategory(e.target.id);\n    stateButtons.forEach(item => {\n      console.log(item.id);\n      if (e.target.key === item.key) {\n        item.clsassList.add(\"active\");\n      }\n    });\n  };\n  const filterHeroesCategory = heroes.filter(item => {\n    return item.element === category;\n  });\n  console.log(filterHeroesCategory);\n  const renderFilter = () => {\n    dispath(heroesFilter(filterHeroesCategory));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card shadow-lg mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: \"\\u041E\\u0442\\u0444\\u0438\\u043B\\u044C\\u0442\\u0440\\u0443\\u0439\\u0442\\u0435 \\u0433\\u0435\\u0440\\u043E\\u0435\\u0432 \\u043F\\u043E \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u0430\\u043C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: stateButtons.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: activeButtonCategory,\n            id: item.key,\n            className: item.className,\n            children: item.name\n          }, item.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(HeroesFilters, \"AGv2DAVzv0OqyNXPBs30UVVEMCw=\", false, function () {\n  return [useHttp, useSelector, useDispatch];\n});\n_c = HeroesFilters;\nexport default HeroesFilters;\nvar _c;\n$RefreshReg$(_c, \"HeroesFilters\");","map":{"version":3,"names":["useHttp","useEffect","useState","useDispatch","useSelector","heroesFilter","jsxDEV","_jsxDEV","HeroesFilters","_s","request","stateButtons","setstateButtons","heroes","state","category","setCategory","dispath","then","data","renderFilter","activeButtonCategory","e","target","id","forEach","item","console","log","key","clsassList","add","filterHeroesCategory","filter","element","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","name","_c","$RefreshReg$"],"sources":["/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/heroesFilters/HeroesFilters.js"],"sourcesContent":["\n// Задача для этого компонента:\n// Фильтры должны формироваться на основании загруженных данных\n// Фильтры должны отображать только нужных героев при выборе\n// Активный фильтр имеет класс active\n// Изменять json-файл для удобства МОЖНО!\n// Представьте, что вы попросили бэкенд-разработчика об этом\nimport { useHttp } from '../../hooks/http.hook';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { heroesFilter } from '../../actions';\n\n\nconst HeroesFilters = () => {\n\n    const { request } = useHttp();\n    const [stateButtons, setstateButtons] = useState([])\n    const { heroes } = useSelector(state => state)\n    const [category, setCategory] = useState(\"\")\n    const dispath = useDispatch()\n\n\n    useEffect(() => {\n        request(\"http://localhost:3001/filters\")\n            .then(data => setstateButtons(data));\n\n        renderFilter(heroes)\n    }, [category]);\n\n    const activeButtonCategory = (e) => {\n        setCategory(e.target.id)\n        stateButtons.forEach((item) => {\n            console.log(item.id);\n            if (e.target.key === item.key) {\n                item.clsassList.add(\"active\")\n            }\n        })\n\n    }\n\n\n    const filterHeroesCategory =\n        heroes.filter((item) => {\n            return item.element === category\n        })\n    console.log(filterHeroesCategory);\n\n    const renderFilter = () => {\n        dispath(heroesFilter(filterHeroesCategory))\n    }\n\n\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    {stateButtons.map((item) => {\n                        return <button onClick={activeButtonCategory} id={item.key} key={item.key} className={item.className}>{item.name}</button>\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}