{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  res: {},\n  statusAddHeroes: ''\n};\nexport const heroesAddFetches = createAsyncThunk('heroesAdd/heroesAddFetches', async res => {\n  fetch(\"http://localhost:3001/heroes\", {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(res)\n  });\n});\nconst heroesAddSlise = createSlice({\n  name: 'heroesAdd',\n  initialState,\n  reducers: {\n    heroesAddFetch: heroesAddFetches = createAsyncThunk('heroesAdd/heroesAddFetches', async res => {\n      fetch(\"http://localhost:3001/heroes\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(res)\n      });\n    })\n  }\n  // extraReducers: (builder) => {\n  //       builder\n  //             .addCase(heroesAddFetches.rejected, state => { state.statusAddHeroes = 'ok' })\n  // }\n});\nconst {\n  actions,\n  reducer\n} = heroesAddSlise;\nexport default reducer;\nexport const {\n  heroesAddFetch\n} = actions;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","res","statusAddHeroes","heroesAddFetches","fetch","method","headers","body","JSON","stringify","heroesAddSlise","name","reducers","heroesAddFetch","actions","reducer"],"sources":["/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/heroesAddForm/heroesAddSlice.jsx"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n      res: {},\n      statusAddHeroes: '',\n}\n\nexport const heroesAddFetches = createAsyncThunk(\n      'heroesAdd/heroesAddFetches',\n      async (res) => {\n            fetch(\"http://localhost:3001/heroes\", {\n                  method: 'POST',\n                  headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                  },\n                  body: JSON.stringify(res)\n            })\n      }\n\n)\n\n\nconst heroesAddSlise = createSlice({\n      name: 'heroesAdd',\n      initialState,\n      reducers: {\n            heroesAddFetch: heroesAddFetches = createAsyncThunk(\n                  'heroesAdd/heroesAddFetches',\n                  async (res) => {\n                        fetch(\"http://localhost:3001/heroes\", {\n                              method: 'POST',\n                              headers: {\n                                    'Accept': 'application/json',\n                                    'Content-Type': 'application/json',\n                              },\n                              body: JSON.stringify(res)\n                        })\n                  }\n\n            )\n      },\n      // extraReducers: (builder) => {\n      //       builder\n      //             .addCase(heroesAddFetches.rejected, state => { state.statusAddHeroes = 'ok' })\n      // }\n})\n\n\nconst { actions, reducer } = heroesAddSlise;\n\nexport default reducer;\n\nexport const { heroesAddFetch } = actions;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,MAAMC,YAAY,GAAG;EACfC,GAAG,EAAE,CAAC,CAAC;EACPC,eAAe,EAAE;AACvB,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGJ,gBAAgB,CAC1C,4BAA4B,EAC5B,MAAOE,GAAG,IAAK;EACTG,KAAK,CAAC,8BAA8B,EAAE;IAChCC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACH,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IACtB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,GAAG;EAC9B,CAAC,CAAC;AACR,CAEN,CAAC;AAGD,MAAMS,cAAc,GAAGZ,WAAW,CAAC;EAC7Ba,IAAI,EAAE,WAAW;EACjBX,YAAY;EACZY,QAAQ,EAAE;IACJC,cAAc,EAAEV,gBAAgB,GAAGJ,gBAAgB,CAC7C,4BAA4B,EAC5B,MAAOE,GAAG,IAAK;MACTG,KAAK,CAAC,8BAA8B,EAAE;QAChCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACH,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE;QACtB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,GAAG;MAC9B,CAAC,CAAC;IACR,CAEN;EACN;EACA;EACA;EACA;EACA;AACN,CAAC,CAAC;AAGF,MAAM;EAAEa,OAAO;EAAEC;AAAQ,CAAC,GAAGL,cAAc;AAE3C,eAAeK,OAAO;AAEtB,OAAO,MAAM;EAAEF;AAAe,CAAC,GAAGC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}