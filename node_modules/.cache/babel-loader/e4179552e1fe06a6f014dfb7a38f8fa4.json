{"ast":null,"code":"// import { createStore, compose, applyMiddleware } from 'redux';\nimport heroes from '../reducers';\n// import ReduxThunk from \"redux-thunk\"\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nconst stringMiddleware = () => next => action => {\n  if (typeof action === \"string\") {\n    return next({\n      type: action\n    });\n  }\n  return next(action);\n};\nconst store = configureStore({\n  reducer: {\n    heroes\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware),\n  devTools: process.env.NODE_ENV !== 'production'\n});\nexport default store;","map":{"version":3,"names":["heroes","configureStore","getDefaultMiddleware","stringMiddleware","next","action","type","store","reducer","middleware","concat","devTools","process","env","NODE_ENV"],"sources":["/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/store/index.js"],"sourcesContent":["// import { createStore, compose, applyMiddleware } from 'redux';\nimport heroes from '../reducers';\n// import ReduxThunk from \"redux-thunk\"\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\n\nconst stringMiddleware = () => (next) => (action) => {\n      if (typeof action === \"string\") {\n            return next({\n                  type: action\n            })\n      }\n      return next(action)\n}\n\n\n\n\nconst store = configureStore({\n      reducer: { heroes },\n      middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware),\n      devTools: process.env.NODE_ENV !== 'production'\n})\n\nexport default store;\n"],"mappings":"AAAA;AACA,OAAOA,MAAM,MAAM,aAAa;AAChC;AACA,SAASC,cAAc,EAAEC,oBAAoB,QAAQ,kBAAkB;AAGvE,MAAMC,gBAAgB,GAAGA,CAAA,KAAOC,IAAI,IAAMC,MAAM,IAAK;EAC/C,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IAC1B,OAAOD,IAAI,CAAC;MACNE,IAAI,EAAED;IACZ,CAAC,CAAC;EACR;EACA,OAAOD,IAAI,CAACC,MAAM,CAAC;AACzB,CAAC;AAKD,MAAME,KAAK,GAAGN,cAAc,CAAC;EACvBO,OAAO,EAAE;IAAER;EAAO,CAAC;EACnBS,UAAU,EAAEP,oBAAoB,IAAIA,oBAAoB,CAAC,CAAC,CAACQ,MAAM,CAACP,gBAAgB,CAAC;EACnFQ,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK;AACzC,CAAC,CAAC;AAEF,eAAeP,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}