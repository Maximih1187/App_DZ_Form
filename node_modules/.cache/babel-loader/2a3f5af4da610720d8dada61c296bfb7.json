{"ast":null,"code":"var _s = $RefreshSig$();\nimport { createSlice, createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\nimport { useHttp } from '../../hooks/http.hook';\nconst heroesArapter = createEntityAdapter();\nconst initialState = heroesArapter.getInitialState({\n  heroesLoadingStatus: 'idle'\n});\nexport const fetchHeroes = createAsyncThunk('heroes/fetchHeroes', _s(() => {\n  _s();\n  const {\n    request\n  } = useHttp();\n  return request(\"http://localhost:3001/heroes\");\n}, \"RW8wnHyYfz8NPGbFIKoeRRKoej8=\", false, function () {\n  return [useHttp];\n}));\nconst heroesSlice = createSlice({\n  name: 'heroes',\n  initialState,\n  reducers: {\n    heroesFetching: state => {\n      state.heroesLoadingStatus = 'loading';\n    },\n    heroesFetched: (state, action) => {\n      state.heroesLoadingStatus = 'idle';\n      state.heroes = action.payload;\n    },\n    heroesFetchingError: state => {\n      state.heroesLoadingStatus = 'error';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchHeroes.pending, state => {\n      state.heroesLoadingStatus = 'loading';\n    }).addCase(fetchHeroes.fulfilled, (state, action) => {\n      state.heroesLoadingStatus = 'idle';\n      heroesArapter.setAll(state, action.payload);\n    }).addCase(fetchHeroes.rejected, state => {\n      state.heroesLoadingStatus = 'error';\n    }).addDefaultCase(() => {});\n  }\n});\nconst {\n  actions,\n  reducer\n} = heroesSlice;\nexport const {\n  selectAll\n} = heroesArapter.getSelectors(state => state.heroes);\nexport const {\n  heroesFetching,\n  heroesFetched,\n  heroesFetchingError\n} = actions;\nexport default reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","createEntityAdapter","useHttp","heroesArapter","initialState","getInitialState","heroesLoadingStatus","fetchHeroes","_s","request","heroesSlice","name","reducers","heroesFetching","state","heroesFetched","action","heroes","payload","heroesFetchingError","extraReducers","builder","addCase","pending","fulfilled","setAll","rejected","addDefaultCase","actions","reducer","selectAll","getSelectors"],"sources":["/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/heroesList/heroesSlice.jsx"],"sourcesContent":["import { createSlice, createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\nimport { useHttp } from '../../hooks/http.hook';\n\nconst heroesArapter = createEntityAdapter()\n\nconst initialState = heroesArapter.getInitialState({\n      heroesLoadingStatus: 'idle'\n})\n\nexport const fetchHeroes = createAsyncThunk(\n      'heroes/fetchHeroes',\n      () => {\n            const { request } = useHttp();\n            return request(\"http://localhost:3001/heroes\")\n      }\n);\n\nconst heroesSlice = createSlice({\n      name: 'heroes',\n      initialState,\n      reducers: {\n            heroesFetching: state => { state.heroesLoadingStatus = 'loading' },\n            heroesFetched: (state, action) => {\n                  state.heroesLoadingStatus = 'idle';\n                  state.heroes = action.payload\n            },\n            heroesFetchingError: state => { state.heroesLoadingStatus = 'error' },\n      },\n      extraReducers: (builder) => {\n            builder\n                  .addCase(fetchHeroes.pending, state => { state.heroesLoadingStatus = 'loading' })\n                  .addCase(fetchHeroes.fulfilled, (state, action) => {\n                        state.heroesLoadingStatus = 'idle';\n                        heroesArapter.setAll(state, action.payload);\n                  })\n                  .addCase(fetchHeroes.rejected, state => { state.heroesLoadingStatus = 'error' })\n                  .addDefaultCase(() => { })\n      }\n});\n\nconst { actions, reducer } = heroesSlice;\n\nexport const { selectAll } = heroesArapter.getSelectors(state => state.heroes)\n\nexport const {\n      heroesFetching,\n      heroesFetched,\n      heroesFetchingError,\n} = actions;\n\nexport default reducer;\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,gBAAgB,EAAEC,mBAAmB,QAAQ,kBAAkB;AACrF,SAASC,OAAO,QAAQ,uBAAuB;AAE/C,MAAMC,aAAa,GAAGF,mBAAmB,CAAC,CAAC;AAE3C,MAAMG,YAAY,GAAGD,aAAa,CAACE,eAAe,CAAC;EAC7CC,mBAAmB,EAAE;AAC3B,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAGP,gBAAgB,CACrC,oBAAoB,EAAAQ,EAAA,CACpB,MAAM;EAAAA,EAAA;EACA,MAAM;IAAEC;EAAQ,CAAC,GAAGP,OAAO,CAAC,CAAC;EAC7B,OAAOO,OAAO,CAAC,8BAA8B,CAAC;AACpD,CAAC;EAAA,QAFyBP,OAAO;AAAA,EAGvC,CAAC;AAED,MAAMQ,WAAW,GAAGX,WAAW,CAAC;EAC1BY,IAAI,EAAE,QAAQ;EACdP,YAAY;EACZQ,QAAQ,EAAE;IACJC,cAAc,EAAEC,KAAK,IAAI;MAAEA,KAAK,CAACR,mBAAmB,GAAG,SAAS;IAAC,CAAC;IAClES,aAAa,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC5BF,KAAK,CAACR,mBAAmB,GAAG,MAAM;MAClCQ,KAAK,CAACG,MAAM,GAAGD,MAAM,CAACE,OAAO;IACnC,CAAC;IACDC,mBAAmB,EAAEL,KAAK,IAAI;MAAEA,KAAK,CAACR,mBAAmB,GAAG,OAAO;IAAC;EAC1E,CAAC;EACDc,aAAa,EAAGC,OAAO,IAAK;IACtBA,OAAO,CACAC,OAAO,CAACf,WAAW,CAACgB,OAAO,EAAET,KAAK,IAAI;MAAEA,KAAK,CAACR,mBAAmB,GAAG,SAAS;IAAC,CAAC,CAAC,CAChFgB,OAAO,CAACf,WAAW,CAACiB,SAAS,EAAE,CAACV,KAAK,EAAEE,MAAM,KAAK;MAC7CF,KAAK,CAACR,mBAAmB,GAAG,MAAM;MAClCH,aAAa,CAACsB,MAAM,CAACX,KAAK,EAAEE,MAAM,CAACE,OAAO,CAAC;IACjD,CAAC,CAAC,CACDI,OAAO,CAACf,WAAW,CAACmB,QAAQ,EAAEZ,KAAK,IAAI;MAAEA,KAAK,CAACR,mBAAmB,GAAG,OAAO;IAAC,CAAC,CAAC,CAC/EqB,cAAc,CAAC,MAAM,CAAE,CAAC,CAAC;EACtC;AACN,CAAC,CAAC;AAEF,MAAM;EAAEC,OAAO;EAAEC;AAAQ,CAAC,GAAGnB,WAAW;AAExC,OAAO,MAAM;EAAEoB;AAAU,CAAC,GAAG3B,aAAa,CAAC4B,YAAY,CAACjB,KAAK,IAAIA,KAAK,CAACG,MAAM,CAAC;AAE9E,OAAO,MAAM;EACPJ,cAAc;EACdE,aAAa;EACbI;AACN,CAAC,GAAGS,OAAO;AAEX,eAAeC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}