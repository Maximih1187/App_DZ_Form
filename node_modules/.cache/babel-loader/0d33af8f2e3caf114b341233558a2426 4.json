{"ast":null,"code":"var _jsxFileName = \"/Users/maximih1108/Desktop/\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442/App_DZ_Form/src/components/pages/FormRegisr.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './scssPages/formRegistr.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sendingfetchForm, fetchDbFilter, onToggleAuthorization } from './slicePages/formRegisterSlice';\n//import { Formik, Form, Field, ErrorMessage, useField } from 'formik';\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormRegisr = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [login, setFormValueLogin] = useState('');\n  const [password, setFormValuePassword] = useState('');\n  const [loginDirty, setLoginDirty] = useState(false);\n  const [passwordDirty, setPasswordDirty] = useState(false);\n  const [loginError, setLoginError] = useState(\"login не может быть пустым\");\n  const [passwordError, setPasswordError] = useState(\"Password не может быть пустым\");\n  const [loginRegister, setloginRegister] = useState();\n  const [resAuthorization, setResAuthorization] = useState();\n  const {\n    registerObj,\n    stateAuthorization\n  } = useSelector(state => state.formRegisterSlice);\n  console.log(login);\n  const [checked, setChecked] = useState(false);\n  useEffect(() => {\n    dispatch(fetchDbFilter());\n  }, []);\n  const userAuthorization = () => {\n    registerObj.map(item => {\n      if (item === login + password) {\n        setResAuthorization(`${login} вы авторизованы!`);\n        dispatch(onToggleAuthorization([true, login]));\n      }\n    });\n  };\n  const resObj = {\n    login: login,\n    password: password\n  };\n  const onSubmit = e => {\n    if (loginRegister === 'Registration') {\n      //e.preventDefault()\n      //fetchData()\n      dispatch(sendingfetchForm(resObj));\n      alert(`Ваш login: ${resObj.login},\nВаш password: ${resObj.password}`);\n      setFormValueLogin('');\n      setFormValuePassword('');\n      setChecked(false);\n    } else if (loginRegister === 'Authorization') {\n      e.preventDefault();\n      userAuthorization();\n      setFormValueLogin('');\n      setFormValuePassword('');\n      setChecked(false);\n      //console.log('Authorization');\n    }\n  };\n  const optionChecked = loginRegister === 'Registration' ? \"Согласие на регистрацию\" : 'Согласие на авторизацию';\n  const optionH1 = loginRegister === 'Registration' ? \"Форма регистрации\" : 'Форма авторизации';\n  const divElse = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper__registe-true\",\n    children: [\"\\u041F\\u0440\\u0438\\u0432\\u0435\\u0442 \", stateAuthorization[1]]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 23\n  }, this);\n  const loginHandler = e => {\n    setFormValueLogin(e.target.value.trim());\n    if (!/^[a-zA-Z1-9]+$/.test(login)) {\n      setLoginError('Login должен использовать латинские буквы и цифры!');\n    } else if (login.length < 5 || login.length > 8) {\n      setLoginError('Login должен быть не менее 5 и не более 8 символов');\n    } else {\n      setLoginError('');\n    }\n  };\n  // !/^[a-zA-Z1-9]+$/.test(login)\n  const passwordHandler = e => {\n    setFormValuePassword(e.target.value.trim());\n    if (!/^[a-zA-Z1-9]+$/.test(password)) {\n      setPasswordError('Login должен использовать латинские буквы и цифры!');\n    } else if (password.length < 5 || password.length > 8) {\n      setPasswordError('Login должен быть не менее 5 и не более 8 символов');\n    } else {\n      setPasswordError('');\n    }\n  };\n  const blurHandler = e => {\n    switch (e.target.name) {\n      case \"login\":\n        setLoginDirty(true);\n        break;\n      case \"password\":\n        setPasswordDirty(true);\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper__register\",\n    children: !stateAuthorization[0] ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form_registr\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: optionH1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        className: \"forma__registration\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"login\",\n          children: \"\\u041B\\u043E\\u0433\\u0438\\u043D: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          required: true,\n          onChange: e => loginHandler(e),\n          onBlur: e => {\n            blurHandler(e);\n          },\n          name: \"login\",\n          value: login,\n          id: \"login\",\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043B\\u043E\\u0433\\u0438\\u043D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 31\n        }, this), loginDirty && loginError && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            \"color\": \"red\"\n          },\n          children: [\" \", loginError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 62\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"forma__registration\",\n          children: \" \\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          required: true,\n          onChange: e => passwordHandler(e),\n          name: \"password\",\n          value: password,\n          id: \"password\",\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          onBlur: e => {\n            blurHandler(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 31\n        }, this), passwordDirty && passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            \"color\": \"red\"\n          },\n          children: [\" \", passwordError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 68\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"currency\",\n          className: \"forma__registration\",\n          children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F/\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          required: true,\n          onChange: e => setloginRegister(e.target.value),\n          className: \"form-select\",\n          id: \"currency\",\n          value: loginRegister,\n          name: \"currency\",\n          as: \"select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Registration\",\n            children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Authorization\",\n            children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"happy\",\n          className: checked ? 'custom-label custom-checkbox-active' : 'custom-label',\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"happy\",\n            type: \"checkbox\",\n            onChange: () => setChecked(!checked),\n            className: \"custom-checkbox\",\n            checked: checked,\n            name: \"terms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 37\n          }, this), optionChecked]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !loginRegister || !checked || !password || !login,\n          type: \"submit\",\n          className: \"btn btn-primary forma__registration\",\n          children: \"\\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 45\n    }, this) : divElse\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 13\n  }, this);\n};\n_s(FormRegisr, \"epHlEBHSdjpvwqlGkf+4Cgk4OiI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = FormRegisr;\nexport default FormRegisr;\nvar _c;\n$RefreshReg$(_c, \"FormRegisr\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","sendingfetchForm","fetchDbFilter","onToggleAuthorization","Yup","jsxDEV","_jsxDEV","FormRegisr","_s","dispatch","login","setFormValueLogin","password","setFormValuePassword","loginDirty","setLoginDirty","passwordDirty","setPasswordDirty","loginError","setLoginError","passwordError","setPasswordError","loginRegister","setloginRegister","resAuthorization","setResAuthorization","registerObj","stateAuthorization","state","formRegisterSlice","console","log","checked","setChecked","userAuthorization","map","item","resObj","onSubmit","e","alert","preventDefault","optionChecked","optionH1","divElse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","loginHandler","target","value","trim","test","length","passwordHandler","blurHandler","name","htmlFor","type","required","onChange","onBlur","id","placeholder","style","as","disabled","_c","$RefreshReg$"],"sources":["/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/pages/FormRegisr.js"],"sourcesContent":["\nimport { useEffect, useState } from 'react';\nimport './scssPages/formRegistr.scss'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sendingfetchForm, fetchDbFilter, onToggleAuthorization } from './slicePages/formRegisterSlice';\n//import { Formik, Form, Field, ErrorMessage, useField } from 'formik';\nimport * as Yup from \"yup\"\n\nconst FormRegisr = () => {\n\n      const dispatch = useDispatch();\n\n\n      const [login, setFormValueLogin] = useState('');\n      const [password, setFormValuePassword] = useState('');\n\n\n      const [loginDirty, setLoginDirty] = useState(false)\n      const [passwordDirty, setPasswordDirty] = useState(false)\n      const [loginError, setLoginError] = useState(\"login не может быть пустым\")\n      const [passwordError, setPasswordError] = useState(\"Password не может быть пустым\")\n\n\n      const [loginRegister, setloginRegister] = useState()\n      const [resAuthorization, setResAuthorization] = useState()\n      const { registerObj, stateAuthorization } = useSelector(state => state.formRegisterSlice)\n\n\n\n      console.log(login);\n\n\n      const [checked, setChecked] = useState(false)\n\n      useEffect(() => {\n            dispatch(fetchDbFilter())\n\n      }, []);\n\n      const userAuthorization = () => {\n            registerObj.map((item) => {\n                  if (item === login + password) {\n                        setResAuthorization(`${login} вы авторизованы!`);\n                        dispatch(onToggleAuthorization([true, login]))\n                  }\n\n            })\n      }\n\n      const resObj = {\n            login: login,\n            password: password,\n      };\n\n      const onSubmit = (e) => {\n            if (loginRegister === 'Registration') {\n                  //e.preventDefault()\n                  //fetchData()\n                  dispatch(sendingfetchForm(resObj))\n                  alert(`Ваш login: ${resObj.login},\nВаш password: ${resObj.password}`)\n                  setFormValueLogin('');\n                  setFormValuePassword('');\n                  setChecked(false);\n            } else if (loginRegister === 'Authorization') {\n                  e.preventDefault()\n                  userAuthorization()\n                  setFormValueLogin('');\n                  setFormValuePassword('');\n                  setChecked(false);\n                  //console.log('Authorization');\n            }\n\n      }\n\n      const optionChecked = loginRegister === 'Registration' ? \"Согласие на регистрацию\" : 'Согласие на авторизацию';\n      const optionH1 = loginRegister === 'Registration' ? \"Форма регистрации\" : 'Форма авторизации';\n      const divElse = <div className='wrapper__registe-true'>Привет {stateAuthorization[1]}</div>\n\n\n      const loginHandler = (e) => {\n            setFormValueLogin(e.target.value.trim())\n            if (!/^[a-zA-Z1-9]+$/.test(login)) {\n                  setLoginError('Login должен использовать латинские буквы и цифры!')\n            }\n            else if (login.length < 5 || login.length > 8) {\n                  setLoginError('Login должен быть не менее 5 и не более 8 символов')\n            } else { setLoginError('') }\n\n      }\n      // !/^[a-zA-Z1-9]+$/.test(login)\n      const passwordHandler = (e) => {\n            setFormValuePassword(e.target.value.trim())\n            if (!/^[a-zA-Z1-9]+$/.test(password)) {\n                  setPasswordError('Login должен использовать латинские буквы и цифры!')\n            }\n            else if (password.length < 5 || password.length > 8) {\n                  setPasswordError('Login должен быть не менее 5 и не более 8 символов')\n            } else { setPasswordError('') }\n\n      }\n\n\n\n      const blurHandler = (e) => {\n            switch (e.target.name) {\n                  case \"login\": setLoginDirty(true)\n                        break;\n                  case \"password\": setPasswordDirty(true)\n                        break;\n\n            }\n      }\n\n\n      return (\n\n            <div className='wrapper__register'>\n                  {!stateAuthorization[0] ? <div className='form_registr'>\n                        <h1>{optionH1}</h1>\n                        <form onSubmit={onSubmit} className='forma__registration'>\n                              <label htmlFor=\"login\">Логин: </label>\n                              <input\n\n                                    className=\"form-control\"\n                                    type=\"text\"\n                                    required\n                                    onChange={(e) => loginHandler(e)}\n                                    onBlur={(e) => { blurHandler(e) }}\n                                    name=\"login\"\n                                    value={login}\n                                    id=\"login\"\n                                    placeholder=\"Введите логин\" />\n                              {(loginDirty && loginError) && <div style={{ \"color\": \"red\" }}> {loginError}</div>}\n                              <label htmlFor=\"password\" className='forma__registration'> Пароль:</label>\n                              <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    required\n                                    onChange={(e) => passwordHandler(e)}\n                                    name=\"password\"\n                                    value={password}\n                                    id=\"password\"\n                                    placeholder=\"Введите пароль\"\n                                    onBlur={(e) => { blurHandler(e) }}\n                              />\n                              {(passwordDirty && passwordError) && <div style={{ \"color\": \"red\" }}> {passwordError}</div>}\n                              <label htmlFor=\"currency\" className=\"forma__registration\">Регистрация/Авторизация</label>\n                              <select\n                                    required\n                                    onChange={(e) => setloginRegister(e.target.value)}\n                                    className=\"form-select\"\n                                    id=\"currency\"\n                                    value={loginRegister}\n                                    name=\"currency\"\n                                    as=\"select\"\n                              >\n                                    <option></option>\n                                    <option value=\"Registration\">Регистрация</option>\n                                    <option value=\"Authorization\">Авторизация</option>\n\n                              </select>\n\n                              <label htmlFor='happy' className={checked ? 'custom-label custom-checkbox-active' : 'custom-label'}>\n                                    <input id=\"happy\"\n                                          type=\"checkbox\"\n                                          onChange={() => setChecked(!checked)}\n                                          className='custom-checkbox'\n                                          checked={checked}\n                                          name=\"terms\"\n                                    />{optionChecked}\n                              </label>\n                              <button\n                                    disabled={!loginRegister || !checked || !password || !login}\n                                    type=\"submit\"\n                                    className=\"btn btn-primary forma__registration\">отправить\n                              </button>\n                        </form>\n                  </div> : divElse}\n\n            </div>\n\n      );\n}\n\nexport default FormRegisr;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}