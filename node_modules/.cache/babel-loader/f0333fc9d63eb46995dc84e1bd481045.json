{"ast":null,"code":"var _jsxFileName = \"/Users/maximih1108/Desktop/\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442/App_DZ_Form/src/components/heroesFilters/HeroesFilters.js\",\n  _s = $RefreshSig$();\n// Задача для этого компонента:\n// Фильтры должны формироваться на основании загруженных данных\n// Фильтры должны отображать только нужных героев при выборе\n// Активный фильтр имеет класс active\n// Изменять json-файл для удобства МОЖНО!\n// Представьте, что вы попросили бэкенд-разработчика об этом\nimport { useHttp } from '../../hooks/http.hook';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { heroesFilter } from '../../actions';\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeroesFilters = () => {\n  _s();\n  const {\n    request\n  } = useHttp();\n  const [stateButtons, setstateButtons] = useState([]);\n  const {\n    heroes\n  } = useSelector(state => state);\n  const [category, setCategory] = useState(\"\");\n  const dispath = useDispatch();\n  useEffect(() => {\n    request(\"http://localhost:3001/filters\").then(data => setstateButtons(data));\n    renderFilter(heroes);\n  }, [category]);\n  const filterHeroesCategory = heroes.filter(item => {\n    return item.element === category;\n  });\n  console.log(filterHeroesCategory);\n  const renderFilter = () => {\n    dispath(heroesFilter(filterHeroesCategory));\n  };\n  const activButton = useRef([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card shadow-lg mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: \"\\u041E\\u0442\\u0444\\u0438\\u043B\\u044C\\u0442\\u0440\\u0443\\u0439\\u0442\\u0435 \\u0433\\u0435\\u0440\\u043E\\u0435\\u0432 \\u043F\\u043E \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u0430\\u043C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: stateButtons.map((item, i) => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            ref: activButton,\n            onClick: e => setCategory(e.target.id),\n            id: item.key,\n            className: item.className,\n            children: item.name\n          }, item.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(HeroesFilters, \"mOijzWtR5KP4/SI7+6RZVpJPQ5E=\", false, function () {\n  return [useHttp, useSelector, useDispatch];\n});\n_c = HeroesFilters;\nexport default HeroesFilters;\nvar _c;\n$RefreshReg$(_c, \"HeroesFilters\");","map":{"version":3,"names":["useHttp","useEffect","useState","useDispatch","useSelector","heroesFilter","useRef","jsxDEV","_jsxDEV","HeroesFilters","_s","request","stateButtons","setstateButtons","heroes","state","category","setCategory","dispath","then","data","renderFilter","filterHeroesCategory","filter","item","element","console","log","activButton","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","i","ref","onClick","e","target","id","key","name","_c","$RefreshReg$"],"sources":["/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/heroesFilters/HeroesFilters.js"],"sourcesContent":["\n// Задача для этого компонента:\n// Фильтры должны формироваться на основании загруженных данных\n// Фильтры должны отображать только нужных героев при выборе\n// Активный фильтр имеет класс active\n// Изменять json-файл для удобства МОЖНО!\n// Представьте, что вы попросили бэкенд-разработчика об этом\nimport { useHttp } from '../../hooks/http.hook';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { heroesFilter } from '../../actions';\nimport { useRef } from 'react';\n\nconst HeroesFilters = () => {\n\n    const { request } = useHttp();\n    const [stateButtons, setstateButtons] = useState([])\n    const { heroes } = useSelector(state => state)\n    const [category, setCategory] = useState(\"\")\n    const dispath = useDispatch()\n\n\n    useEffect(() => {\n        request(\"http://localhost:3001/filters\")\n            .then(data => setstateButtons(data));\n\n        renderFilter(heroes)\n    }, [category]);\n\n\n    const filterHeroesCategory =\n        heroes.filter((item) => {\n            return item.element === category\n        })\n    console.log(filterHeroesCategory);\n\n    const renderFilter = () => {\n        dispath(heroesFilter(filterHeroesCategory))\n    }\n    const activButton = useRef([])\n\n\n\n\n\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    {stateButtons.map((item, i) => {\n                        return <button ref={activButton} onClick={(e) => setCategory(e.target.id)} id={item.key} key={item.key} className={item.className}>{item.name}</button>\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;\n"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY,QAAQ,eAAe;AAC5C,SAASC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAExB,MAAM;IAAEC;EAAQ,CAAC,GAAGX,OAAO,CAAC,CAAC;EAC7B,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM;IAAEY;EAAO,CAAC,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAAC;EAC9C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMgB,OAAO,GAAGf,WAAW,CAAC,CAAC;EAG7BF,SAAS,CAAC,MAAM;IACZU,OAAO,CAAC,+BAA+B,CAAC,CACnCQ,IAAI,CAACC,IAAI,IAAIP,eAAe,CAACO,IAAI,CAAC,CAAC;IAExCC,YAAY,CAACP,MAAM,CAAC;EACxB,CAAC,EAAE,CAACE,QAAQ,CAAC,CAAC;EAGd,MAAMM,oBAAoB,GACtBR,MAAM,CAACS,MAAM,CAAEC,IAAI,IAAK;IACpB,OAAOA,IAAI,CAACC,OAAO,KAAKT,QAAQ;EACpC,CAAC,CAAC;EACNU,OAAO,CAACC,GAAG,CAACL,oBAAoB,CAAC;EAEjC,MAAMD,YAAY,GAAGA,CAAA,KAAM;IACvBH,OAAO,CAACb,YAAY,CAACiB,oBAAoB,CAAC,CAAC;EAC/C,CAAC;EACD,MAAMM,WAAW,GAAGtB,MAAM,CAAC,EAAE,CAAC;EAO9B,oBACIE,OAAA;IAAKqB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAChCtB,OAAA;MAAKqB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtBtB,OAAA;QAAGqB,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAAgC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC7D1B,OAAA;QAAKqB,SAAS,EAAC,WAAW;QAAAC,QAAA,EACrBlB,YAAY,CAACuB,GAAG,CAAC,CAACX,IAAI,EAAEY,CAAC,KAAK;UAC3B,oBAAO5B,OAAA;YAAQ6B,GAAG,EAAET,WAAY;YAACU,OAAO,EAAGC,CAAC,IAAKtB,WAAW,CAACsB,CAAC,CAACC,MAAM,CAACC,EAAE,CAAE;YAACA,EAAE,EAAEjB,IAAI,CAACkB,GAAI;YAAgBb,SAAS,EAAEL,IAAI,CAACK,SAAU;YAAAC,QAAA,EAAEN,IAAI,CAACmB;UAAI,GAA/CnB,IAAI,CAACkB,GAAG;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAgD,CAAC;QAC3J,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAxB,EAAA,CA7CKD,aAAa;EAAA,QAEKT,OAAO,EAERI,WAAW,EAEdD,WAAW;AAAA;AAAAyC,EAAA,GANzBnC,aAAa;AA+CnB,eAAeA,aAAa;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}