{"ast":null,"code":"var _jsxFileName = \"/Users/maximih1108/Desktop/\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442/App_DZ_Form/src/components/elevator/Elevator.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\n// import ButtonLevel from './ButtonLevel';\nimport './Elevator.scss';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Elevator = () => {\n  _s();\n  const [countLevel, setCountLevel] = useState(1);\n  console.log(countLevel);\n  const levelArr = [{\n    children: 1,\n    id: 1,\n    className: 'level level_active'\n  }, {\n    children: 2,\n    id: 2,\n    className: 'level'\n  }, {\n    children: 3,\n    id: 3,\n    className: 'level'\n  }, {\n    children: 4,\n    id: 4,\n    className: 'level'\n  }, {\n    children: 5,\n    id: 5,\n    className: 'level'\n  }, {\n    children: 6,\n    id: 6,\n    className: 'level'\n  }];\n  const levelRef = useRef([]);\n  const removeClassLevel = (i, id) => {\n    setCountLevel(id - countLevel);\n    levelRef.current.forEach(item => item.classList.remove(\"level_active\"));\n    levelRef.current[i].classList.add(\"level_active\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"elevator\",\n    children: levelArr.reverse().map((item, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n      id: item.id,\n      className: item.className,\n      ref: el => levelRef.current[i] = el,\n      onClick: () => removeClassLevel(i, item.id),\n      children: item.children\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 13\n  }, this);\n};\n_s(Elevator, \"ATH3Vhm4STatKBxgNbY50Qw0RB4=\");\n_c = Elevator;\nexport default Elevator;\nvar _c;\n$RefreshReg$(_c, \"Elevator\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","Elevator","_s","countLevel","setCountLevel","console","log","levelArr","children","id","className","levelRef","removeClassLevel","i","current","forEach","item","classList","remove","add","reverse","map","ref","el","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/elevator/Elevator.js"],"sourcesContent":["import React from 'react';\n// import ButtonLevel from './ButtonLevel';\nimport './Elevator.scss'\nimport { useRef, useState } from 'react';\n\n\nconst Elevator = () => {\n      const [countLevel, setCountLevel] = useState(1)\n      console.log(countLevel);\n\n      const levelArr = [{\n            children: 1,\n            id: 1,\n            className: 'level level_active'\n      },\n      {\n            children: 2,\n            id: 2,\n            className: 'level'\n      },\n      {\n            children: 3,\n            id: 3,\n            className: 'level'\n      },\n      {\n            children: 4,\n            id: 4,\n            className: 'level'\n      },\n      {\n            children: 5,\n            id: 5,\n            className: 'level'\n      },\n      {\n            children: 6,\n            id: 6,\n            className: 'level'\n      },\n      ]\n      const levelRef = useRef([])\n\n\n\n      const removeClassLevel = (i, id) => {\n            setCountLevel(id - countLevel)\n            levelRef.current.forEach((item) =>\n                  item.classList.remove(\"level_active\")\n            );\n            levelRef.current[i].classList.add(\"level_active\");\n\n      }\n\n\n\n\n\n      return (\n            <div className='elevator'>\n                  {levelArr.reverse().map((item, i) =>\n                        <button id={item.id}\n                              key={item.id}\n                              className={item.className}\n                              ref={(el) => (levelRef.current[i] = el)}\n                              onClick={() => removeClassLevel(i, item.id)}\n                        >\n                              {item.children}\n                        </button>\n                  )}\n            </div>\n      );\n}\n\nexport default Elevator;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAO,iBAAiB;AACxB,SAASC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAC/CO,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;EAEvB,MAAMI,QAAQ,GAAG,CAAC;IACZC,QAAQ,EAAE,CAAC;IACXC,EAAE,EAAE,CAAC;IACLC,SAAS,EAAE;EACjB,CAAC,EACD;IACMF,QAAQ,EAAE,CAAC;IACXC,EAAE,EAAE,CAAC;IACLC,SAAS,EAAE;EACjB,CAAC,EACD;IACMF,QAAQ,EAAE,CAAC;IACXC,EAAE,EAAE,CAAC;IACLC,SAAS,EAAE;EACjB,CAAC,EACD;IACMF,QAAQ,EAAE,CAAC;IACXC,EAAE,EAAE,CAAC;IACLC,SAAS,EAAE;EACjB,CAAC,EACD;IACMF,QAAQ,EAAE,CAAC;IACXC,EAAE,EAAE,CAAC;IACLC,SAAS,EAAE;EACjB,CAAC,EACD;IACMF,QAAQ,EAAE,CAAC;IACXC,EAAE,EAAE,CAAC;IACLC,SAAS,EAAE;EACjB,CAAC,CACA;EACD,MAAMC,QAAQ,GAAGd,MAAM,CAAC,EAAE,CAAC;EAI3B,MAAMe,gBAAgB,GAAGA,CAACC,CAAC,EAAEJ,EAAE,KAAK;IAC9BL,aAAa,CAACK,EAAE,GAAGN,UAAU,CAAC;IAC9BQ,QAAQ,CAACG,OAAO,CAACC,OAAO,CAAEC,IAAI,IACxBA,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,cAAc,CAC1C,CAAC;IACDP,QAAQ,CAACG,OAAO,CAACD,CAAC,CAAC,CAACI,SAAS,CAACE,GAAG,CAAC,cAAc,CAAC;EAEvD,CAAC;EAMD,oBACMnB,OAAA;IAAKU,SAAS,EAAC,UAAU;IAAAF,QAAA,EAClBD,QAAQ,CAACa,OAAO,CAAC,CAAC,CAACC,GAAG,CAAC,CAACL,IAAI,EAAEH,CAAC,kBAC1Bb,OAAA;MAAQS,EAAE,EAAEO,IAAI,CAACP,EAAG;MAEdC,SAAS,EAAEM,IAAI,CAACN,SAAU;MAC1BY,GAAG,EAAGC,EAAE,IAAMZ,QAAQ,CAACG,OAAO,CAACD,CAAC,CAAC,GAAGU,EAAI;MACxCC,OAAO,EAAEA,CAAA,KAAMZ,gBAAgB,CAACC,CAAC,EAAEG,IAAI,CAACP,EAAE,CAAE;MAAAD,QAAA,EAE3CQ,IAAI,CAACR;IAAQ,GALTQ,IAAI,CAACP,EAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMV,CACd;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAElB,CAAC;AAAA1B,EAAA,CAlEKD,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAoEd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}