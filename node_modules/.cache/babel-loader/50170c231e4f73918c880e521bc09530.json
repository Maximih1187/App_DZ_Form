{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  category: \"all\",\n  stateButtons: []\n};\nexport const buttonFilterFetch = createAsyncThunk('filter/buttonFilterFetch', async (url, rejectWithValue) => {\n  try {\n    const response = await fetch(\"http://localhost:3001/filters\");\n    if (!response.ok) {\n      throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.massage);\n  }\n});\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState,\n  reducers: {\n    categoryFilter: (state, action) => {\n      state.category = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(buttonFilterFetch.fulfilled, (state, action) => {\n      state.stateButtons = action.payload;\n    });\n  }\n});\nconst {\n  actions,\n  reducer\n} = filterSlice;\nexport default reducer;\nexport const {\n  heroesFilter,\n  categoryFilter\n} = actions;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","category","stateButtons","buttonFilterFetch","url","rejectWithValue","response","fetch","ok","Error","status","data","json","error","massage","filterSlice","name","reducers","categoryFilter","state","action","payload","extraReducers","builder","addCase","fulfilled","actions","reducer","heroesFilter"],"sources":["/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/heroesFilters/filterSlice.jsx"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n      category: \"all\",\n      stateButtons: []\n}\n\nexport const buttonFilterFetch = createAsyncThunk(\n      'filter/buttonFilterFetch',\n      async (url, rejectWithValue) => {\n            try {\n                  const response = await fetch(\"http://localhost:3001/filters\")\n                  if (!response.ok) {\n                        throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n                  }\n                  const data = await response.json()\n                  return data;\n            } catch (error) {\n                  return rejectWithValue(error.massage)\n            }\n      }\n);\n\n\n\n\nconst filterSlice = createSlice({\n      name: 'filter',\n      initialState,\n      reducers: {\n            categoryFilter: (state, action) => { state.category = action.payload },\n      },\n      extraReducers: (builder) => {\n            builder\n                  .addCase(buttonFilterFetch.fulfilled, (state, action) => {\n                        state.stateButtons = action.payload\n                  })\n      }\n});\n\nconst { actions, reducer } = filterSlice;\n\nexport default reducer;\nexport const { heroesFilter, categoryFilter } = actions;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,MAAMC,YAAY,GAAG;EACfC,QAAQ,EAAE,KAAK;EACfC,YAAY,EAAE;AACpB,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAGJ,gBAAgB,CAC3C,0BAA0B,EAC1B,OAAOK,GAAG,EAAEC,eAAe,KAAK;EAC1B,IAAI;IACE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;IAC7D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MACZ,MAAM,IAAIC,KAAK,CAAE,mBAAkBL,GAAI,aAAYE,QAAQ,CAACI,MAAO,EAAC,CAAC;IAC3E;IACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACV,OAAOR,eAAe,CAACQ,KAAK,CAACC,OAAO,CAAC;EAC3C;AACN,CACN,CAAC;AAKD,MAAMC,WAAW,GAAGjB,WAAW,CAAC;EAC1BkB,IAAI,EAAE,QAAQ;EACdhB,YAAY;EACZiB,QAAQ,EAAE;IACJC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAAED,KAAK,CAAClB,QAAQ,GAAGmB,MAAM,CAACC,OAAO;IAAC;EAC3E,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACtBA,OAAO,CACAC,OAAO,CAACrB,iBAAiB,CAACsB,SAAS,EAAE,CAACN,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAACjB,YAAY,GAAGkB,MAAM,CAACC,OAAO;IACzC,CAAC,CAAC;EACd;AACN,CAAC,CAAC;AAEF,MAAM;EAAEK,OAAO;EAAEC;AAAQ,CAAC,GAAGZ,WAAW;AAExC,eAAeY,OAAO;AACtB,OAAO,MAAM;EAAEC,YAAY;EAAEV;AAAe,CAAC,GAAGQ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}