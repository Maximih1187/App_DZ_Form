{"ast":null,"code":"var _jsxFileName = \"/Users/maximih1108/Desktop/\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442/App_DZ_Form/src/components/pages/About.js\",\n  _s = $RefreshSig$();\nimport './scssPages/about.scss';\nimport { useEffect, useRef } from 'react';\nimport { useHttp } from '../../hooks/http.hook';\nimport Spinner from '../spinner/Spinner';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchChar } from './slicePages/aboutSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst About = () => {\n  _s();\n  const dispatch = useDispatch();\n  const char = useSelector(state => state.aboutSlice);\n  console.log(char);\n  useEffect(() => {\n    dispatch(fetchChar());\n  }, []);\n  const chart = char => char.char.map(_transformCharacter);\n  const der = chart(char);\n  console.log(der);\n  // const res = char.char.data.results.map(_transformCharacter)\n  // console.log(res);\n  // //const { id, name } = char.char.data.result[1]\n  // ;\n  // // const res = (rest) => {\n  // //       return rest.char.data.results.map(_transformCharacter)\n\n  // // };\n  // // console.log(res);\n  const _transformCharacter = char => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description\n      // thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n      // homepage: char.urls[0].url,\n      // wiki: char.urls[1].url,\n      // comics: char.comics.items,\n    };\n  };\n\n  //       if (chars.length < 1) {\n  //             return (\n  //                   <div className='spinner'>\n  //                         <Spinner />\n  //                   </div>\n\n  //             )\n  //       };\n\n  //       return (\n  //             <ul className='about'>\n  //                   {<ComponentChar chars={chars} />}\n  //             </ul>\n  //       );\n  // }\n\n  // const ComponentChar = (props) => {\n  //       const { chars } = props;\n\n  //       const refer = useRef([]);\n\n  //       const focuseItem = (i) => {\n  //             refer.current.forEach((item) => {\n  //                   item.classList.remove('activer')\n  //             });\n  //             refer.current[i].classList.add('activer')\n  //       }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 13\n  }, this);\n};\n_s(About, \"c5zw5xlGyb0svVCc+Bh+DNIfYWY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["useEffect","useRef","useHttp","Spinner","useDispatch","useSelector","fetchChar","jsxDEV","_jsxDEV","About","_s","dispatch","char","state","aboutSlice","console","log","chart","map","_transformCharacter","der","id","name","description","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/pages/About.js"],"sourcesContent":["import './scssPages/about.scss'\nimport { useEffect, useRef } from 'react';\nimport { useHttp } from '../../hooks/http.hook';\nimport Spinner from '../spinner/Spinner';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchChar } from './slicePages/aboutSlice';\n\n\n\n\nconst About = () => {\n\n      const dispatch = useDispatch()\n      const char = useSelector(state => state.aboutSlice)\n      console.log(char);\n\n      useEffect(() => {\n            dispatch(fetchChar())\n      }, [])\n\n\n\n      const chart = (char) => char.char.map(_transformCharacter)\n      const der = chart(char)\n      console.log(der);\n      // const res = char.char.data.results.map(_transformCharacter)\n      // console.log(res);\n      // //const { id, name } = char.char.data.result[1]\n      // ;\n      // // const res = (rest) => {\n      // //       return rest.char.data.results.map(_transformCharacter)\n\n      // // };\n      // // console.log(res);\n      const _transformCharacter = (char) => {\n            return {\n                  id: char.id,\n                  name: char.name,\n                  description: char.description,\n                  // thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n                  // homepage: char.urls[0].url,\n                  // wiki: char.urls[1].url,\n                  // comics: char.comics.items,\n            };\n      };\n\n\n      //       if (chars.length < 1) {\n      //             return (\n      //                   <div className='spinner'>\n      //                         <Spinner />\n      //                   </div>\n\n      //             )\n      //       };\n\n      //       return (\n      //             <ul className='about'>\n      //                   {<ComponentChar chars={chars} />}\n      //             </ul>\n      //       );\n      // }\n\n\n\n      // const ComponentChar = (props) => {\n      //       const { chars } = props;\n\n      //       const refer = useRef([]);\n\n      //       const focuseItem = (i) => {\n      //             refer.current.forEach((item) => {\n      //                   item.classList.remove('activer')\n      //             });\n      //             refer.current[i].classList.add('activer')\n      //       }\n\n      return (\n            <div>\n                  {/* {\n                        chars.map((item, i) => {\n                              return (\n                                    <li ref={(el) => (refer.current[i] = el)}\n                                          onClick={() => focuseItem(i)}\n                                          key={i}\n                                          id={i}\n                                          className='about__list'>\n                                          <div className='about__list-name'>{item.name}</div>\n                                          <div className='about__list-descr'>{item.description}</div>\n                                          <div className='about__list-id'>{item.id}</div>\n                                    </li>\n                              )\n\n\n                        })\n                  } */}\n            </div>\n\n      )\n\n\n}\n\n\n\nexport default About;\n"],"mappings":";;AAAA,OAAO,wBAAwB;AAC/B,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,OAAOC,OAAO,MAAM,oBAAoB;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKpD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEd,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,IAAI,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,UAAU,CAAC;EACnDC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EAEjBZ,SAAS,CAAC,MAAM;IACVW,QAAQ,CAACL,SAAS,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAIN,MAAMW,KAAK,GAAIL,IAAI,IAAKA,IAAI,CAACA,IAAI,CAACM,GAAG,CAACC,mBAAmB,CAAC;EAC1D,MAAMC,GAAG,GAAGH,KAAK,CAACL,IAAI,CAAC;EACvBG,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;EAChB;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA,MAAMD,mBAAmB,GAAIP,IAAI,IAAK;IAChC,OAAO;MACDS,EAAE,EAAET,IAAI,CAACS,EAAE;MACXC,IAAI,EAAEV,IAAI,CAACU,IAAI;MACfC,WAAW,EAAEX,IAAI,CAACW;MAClB;MACA;MACA;MACA;IACN,CAAC;EACP,CAAC;;EAGD;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAIA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACMf,OAAA;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAkBK,CAAC;AAKlB,CAAC;AAAAjB,EAAA,CA3FKD,KAAK;EAAA,QAEYL,WAAW,EACfC,WAAW;AAAA;AAAAuB,EAAA,GAHxBnB,KAAK;AA+FX,eAAeA,KAAK;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}