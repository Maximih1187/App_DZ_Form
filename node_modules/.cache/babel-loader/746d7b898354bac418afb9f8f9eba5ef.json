{"ast":null,"code":"var _jsxFileName = \"/Users/maximih1108/Desktop/\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442/App_DZ_Form/src/components/heroesFilters/HeroesFilters.js\",\n  _s = $RefreshSig$();\n// Задача для этого компонента:\n// Фильтры должны формироваться на основании загруженных данных\n// Фильтры должны отображать только нужных героев при выборе\n// Активный фильтр имеет класс active\n// Изменять json-файл для удобства МОЖНО!\n// Представьте, что вы попросили бэкенд-разработчика об этом\nimport { useHttp } from '../../hooks/http.hook';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { heroesFilter } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeroesFilters = () => {\n  _s();\n  const {\n    request\n  } = useHttp();\n  const [stateButtons, setstateButtons] = useState([]);\n  const {\n    heroes\n  } = useSelector(state => state);\n  const [category, setCategory] = useState(\"all\");\n  const dispath = useDispatch();\n  useEffect(() => {\n    request(\"http://localhost:3001/filters\").then(data => setstateButtons(data));\n  }, []);\n  const getButtonCategory = e => {\n    setCategory(e.target.id);\n    renderFilter();\n  };\n  const filterHeroes = heroes.filter(item => {\n    return item.element === category;\n  });\n  const renderFilter = () => {\n    dispath(heroesFilter(filterHeroes));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card shadow-lg mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: \"\\u041E\\u0442\\u0444\\u0438\\u043B\\u044C\\u0442\\u0440\\u0443\\u0439\\u0442\\u0435 \\u0433\\u0435\\u0440\\u043E\\u0435\\u0432 \\u043F\\u043E \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u0430\\u043C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: stateButtons.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: getButtonCategory,\n            id: item.key,\n            className: item.className,\n            children: item.name\n          }, item.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(HeroesFilters, \"Gl4QymWgWBmNeZExBIGYys1Zfdg=\", false, function () {\n  return [useHttp, useSelector, useDispatch];\n});\n_c = HeroesFilters;\nexport default HeroesFilters;\nvar _c;\n$RefreshReg$(_c, \"HeroesFilters\");","map":{"version":3,"names":["useHttp","useEffect","useState","useDispatch","useSelector","heroesFilter","jsxDEV","_jsxDEV","HeroesFilters","_s","request","stateButtons","setstateButtons","heroes","state","category","setCategory","dispath","then","data","getButtonCategory","e","target","id","renderFilter","filterHeroes","filter","item","element","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","key","name","_c","$RefreshReg$"],"sources":["/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/heroesFilters/HeroesFilters.js"],"sourcesContent":["\n// Задача для этого компонента:\n// Фильтры должны формироваться на основании загруженных данных\n// Фильтры должны отображать только нужных героев при выборе\n// Активный фильтр имеет класс active\n// Изменять json-файл для удобства МОЖНО!\n// Представьте, что вы попросили бэкенд-разработчика об этом\nimport { useHttp } from '../../hooks/http.hook';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { heroesFilter } from '../../actions';\n\n\nconst HeroesFilters = () => {\n\n    const { request } = useHttp();\n    const [stateButtons, setstateButtons] = useState([])\n    const { heroes } = useSelector(state => state)\n    const [category, setCategory] = useState(\"all\")\n    const dispath = useDispatch()\n\n\n    useEffect(() => {\n        request(\"http://localhost:3001/filters\")\n            .then(data => setstateButtons(data));\n\n    }, []);\n\n    const getButtonCategory = (e) => {\n        setCategory(e.target.id)\n        renderFilter()\n    }\n\n    const filterHeroes = heroes.filter((item) => {\n        return item.element === category\n    })\n\n    const renderFilter = () => {\n        dispath(heroesFilter(filterHeroes))\n    }\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    {stateButtons.map((item) => {\n                        return <button onClick={getButtonCategory} id={item.key} key={item.key} className={item.className}>{item.name}</button>\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;\n"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAExB,MAAM;IAAEC;EAAQ,CAAC,GAAGV,OAAO,CAAC,CAAC;EAC7B,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM;IAAEW;EAAO,CAAC,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAAC;EAC9C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMe,OAAO,GAAGd,WAAW,CAAC,CAAC;EAG7BF,SAAS,CAAC,MAAM;IACZS,OAAO,CAAC,+BAA+B,CAAC,CACnCQ,IAAI,CAACC,IAAI,IAAIP,eAAe,CAACO,IAAI,CAAC,CAAC;EAE5C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC7BL,WAAW,CAACK,CAAC,CAACC,MAAM,CAACC,EAAE,CAAC;IACxBC,YAAY,CAAC,CAAC;EAClB,CAAC;EAED,MAAMC,YAAY,GAAGZ,MAAM,CAACa,MAAM,CAAEC,IAAI,IAAK;IACzC,OAAOA,IAAI,CAACC,OAAO,KAAKb,QAAQ;EACpC,CAAC,CAAC;EAEF,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACvBP,OAAO,CAACZ,YAAY,CAACoB,YAAY,CAAC,CAAC;EACvC,CAAC;EAED,oBACIlB,OAAA;IAAKsB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAChCvB,OAAA;MAAKsB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtBvB,OAAA;QAAGsB,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAAgC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC7D3B,OAAA;QAAKsB,SAAS,EAAC,WAAW;QAAAC,QAAA,EACrBnB,YAAY,CAACwB,GAAG,CAAER,IAAI,IAAK;UACxB,oBAAOpB,OAAA;YAAQ6B,OAAO,EAAEhB,iBAAkB;YAACG,EAAE,EAAEI,IAAI,CAACU,GAAI;YAAgBR,SAAS,EAAEF,IAAI,CAACE,SAAU;YAAAC,QAAA,EAAEH,IAAI,CAACW;UAAI,GAA/CX,IAAI,CAACU,GAAG;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAgD,CAAC;QAC3H,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAzB,EAAA,CAxCKD,aAAa;EAAA,QAEKR,OAAO,EAERI,WAAW,EAEdD,WAAW;AAAA;AAAAoC,EAAA,GANzB/B,aAAa;AA0CnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}