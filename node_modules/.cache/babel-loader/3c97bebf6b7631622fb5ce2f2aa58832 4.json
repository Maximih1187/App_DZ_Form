{"ast":null,"code":"var _jsxFileName = \"/Users/maximih1108/Desktop/\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442/App_DZ_Form/src/components/forms/Forms.js\";\nimport React from 'react';\nimport './forms.scss';\nimport Input from './inputs/Input';\nimport { Formik, Form } from 'formik';\nimport { initialValues, schemas } from './helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fofms = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: schemas.custom,\n    validate: values => {\n      const errors = {};\n      if (!values.email) {\n        errors.email = 'Не может быть пустым';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = 'Не правильный формат email адреса';\n      }\n      return errors;\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {},\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        name: \"email\",\n        lable: \"Email\",\n        placeholder: \"\\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        name: \"password\",\n        lable: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\",\n        placeholder: \"\\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }, this);\n};\n_c = Fofms;\nexport default Fofms;\nvar _c;\n$RefreshReg$(_c, \"Fofms\");","map":{"version":3,"names":["React","Input","Formik","Form","initialValues","schemas","jsxDEV","_jsxDEV","Fofms","validationSchema","custom","validate","values","errors","email","test","onSubmit","setSubmitting","children","className","id","name","lable","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/forms/Forms.js"],"sourcesContent":["import React from 'react';\nimport './forms.scss'\nimport Input from './inputs/Input';\nimport { Formik, Form } from 'formik';\nimport { initialValues, schemas } from './helper';\n\n\nconst Fofms = () => {\n      return (\n            <Formik\n                  initialValues={initialValues}\n                  validationSchema={schemas.custom}\n                  validate={values => {\n                        const errors = {};\n                        if (!values.email) {\n                              errors.email = 'Не может быть пустым';\n                        } else if (\n                              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                        ) {\n                              errors.email = 'Не правильный формат email адреса';\n                        }\n                        return errors;\n                  }}\n                  onSubmit={(values, { setSubmitting }) => {\n\n                  }}\n            >\n                  <Form className='form'>\n                        <Input id=\"email\" name=\"email\" lable=\"Email\" placeholder=\"введите email\" />\n                        <Input id=\"password\" name=\"password\" lable=\"Пароль:\" placeholder=\"введите пароль\" />\n                  </Form>\n            </Formik>\n\n      );\n}\n\nexport default Fofms;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB,OAAOC,KAAK,MAAM,gBAAgB;AAClC,SAASC,MAAM,EAAEC,IAAI,QAAQ,QAAQ;AACrC,SAASC,aAAa,EAAEC,OAAO,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EACd,oBACMD,OAAA,CAACL,MAAM;IACDE,aAAa,EAAEA,aAAc;IAC7BK,gBAAgB,EAAEJ,OAAO,CAACK,MAAO;IACjCC,QAAQ,EAAEC,MAAM,IAAI;MACd,MAAMC,MAAM,GAAG,CAAC,CAAC;MACjB,IAAI,CAACD,MAAM,CAACE,KAAK,EAAE;QACbD,MAAM,CAACC,KAAK,GAAG,sBAAsB;MAC3C,CAAC,MAAM,IACD,CAAC,0CAA0C,CAACC,IAAI,CAACH,MAAM,CAACE,KAAK,CAAC,EAClE;QACID,MAAM,CAACC,KAAK,GAAG,mCAAmC;MACxD;MACA,OAAOD,MAAM;IACnB,CAAE;IACFG,QAAQ,EAAEA,CAACJ,MAAM,EAAE;MAAEK;IAAc,CAAC,KAAK,CAEzC,CAAE;IAAAC,QAAA,eAEFX,OAAA,CAACJ,IAAI;MAACgB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBAChBX,OAAA,CAACN,KAAK;QAACmB,EAAE,EAAC,OAAO;QAACC,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC,OAAO;QAACC,WAAW,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3EpB,OAAA,CAACN,KAAK;QAACmB,EAAE,EAAC,UAAU;QAACC,IAAI,EAAC,UAAU;QAACC,KAAK,EAAC,uCAAS;QAACC,WAAW,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAGrB,CAAC;AAAAC,EAAA,GA3BKpB,KAAK;AA6BX,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}