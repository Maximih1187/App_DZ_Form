{"ast":null,"code":"var _jsxFileName = \"/Users/maximih1108/Desktop/\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442/App_DZ_Form/src/components/pages/FormRegisr.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './scssPages/formRegistr.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { onRegistrSubmitForm, sendingfetchForm } from './slicePages/formRegisterSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormRegisr = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [formValueLogin, setFormValueLogin] = useState('');\n  const [formValuePassword, setFormValuePassword] = useState('');\n  const [checked, setChecked] = useState(false);\n  const [loginRegister, setloginRegister] = useState();\n  const {\n    registerObj\n  } = useSelector(state => state.formRegisterSlice);\n  //const { stateCheckbox } = useSelector(state => state.formRegisterSlice)\n  //const { v4: uuidv4 } = require('uuid');\n  console.log(loginRegister);\n  const toggleChecked = () => {\n    setChecked(!checked);\n  };\n  const fetchData = async () => {\n    const response = await fetch(\"http://localhost:3001/users\");\n    const data = await response.json();\n    data.filter(item => {\n      item.login + item.password === formValueLogin + formValuePassword;\n    });\n    console.log(data);\n  };\n  const onSubmit = e => {\n    if (loginRegister === 'Registration') {\n      fetchData();\n      e.preventDefault();\n      const resObj = {\n        login: formValueLogin,\n        password: formValuePassword\n      };\n      dispatch(sendingfetchForm(resObj));\n      setFormValueLogin('');\n      setFormValuePassword('');\n      setChecked(false);\n    } else if (loginRegister === 'Authorization') {}\n    dispatch(onRegistrSubmitForm(resObj));\n\n    // alert(`Статус отправки:\n    //                         login: ${resObj.login},\n    //                         password: ${resObj.password}`)\n  };\n  const optionChecked = loginRegister === 'Registration' ? \"Согласие на регистрацию\" : 'Согласие на авторизацию';\n  const optionH1 = loginRegister === 'Registration' ? \"Форма регистрации\" : 'Форма авторизации';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper__register\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form_registr\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: optionH1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        className: \"forma__registration\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"login\",\n          children: \"\\u041B\\u043E\\u0433\\u0438\\u043D: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          required: true,\n          onChange: e => setFormValueLogin(e.target.value),\n          name: \"login\",\n          value: formValueLogin,\n          id: \"login\",\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043B\\u043E\\u0433\\u0438\\u043D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"forma__registration\",\n          children: \" \\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          required: true,\n          onChange: e => setFormValuePassword(e.target.value),\n          name: \"password\",\n          value: formValuePassword,\n          id: \"password\",\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"element\",\n          className: \"forma__registration\",\n          children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F/\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          required: true,\n          onChange: e => setloginRegister(e.target.value),\n          className: \"form-select\",\n          id: \"element\",\n          value: loginRegister,\n          name: \"element\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Registration\",\n            children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Authorization\",\n            children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"happy\",\n          className: checked ? 'custom-label custom-checkbox-active' : 'custom-label',\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"happy\",\n            type: \"checkbox\",\n            onChange: toggleChecked,\n            className: \"custom-checkbox\",\n            checked: checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 37\n          }, this), optionChecked]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !loginRegister || !checked || !formValuePassword || !formValueLogin,\n          type: \"submit\",\n          className: \"btn btn-primary forma__registration\",\n          children: \"\\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 13\n  }, this);\n};\n_s(FormRegisr, \"QDO08Re3sJT9le78gKLSoiPDscA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = FormRegisr;\nexport default FormRegisr;\nvar _c;\n$RefreshReg$(_c, \"FormRegisr\");","map":{"version":3,"names":["useState","useDispatch","useSelector","onRegistrSubmitForm","sendingfetchForm","jsxDEV","_jsxDEV","FormRegisr","_s","dispatch","formValueLogin","setFormValueLogin","formValuePassword","setFormValuePassword","checked","setChecked","loginRegister","setloginRegister","registerObj","state","formRegisterSlice","console","log","toggleChecked","fetchData","response","fetch","data","json","filter","item","login","password","onSubmit","e","preventDefault","resObj","optionChecked","optionH1","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","required","onChange","target","value","name","id","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/pages/FormRegisr.js"],"sourcesContent":["\nimport { useState } from 'react';\nimport './scssPages/formRegistr.scss'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { onRegistrSubmitForm, sendingfetchForm } from './slicePages/formRegisterSlice';\n\nconst FormRegisr = () => {\n      const dispatch = useDispatch();\n      const [formValueLogin, setFormValueLogin] = useState('');\n      const [formValuePassword, setFormValuePassword] = useState('');\n      const [checked, setChecked] = useState(false)\n      const [loginRegister, setloginRegister] = useState()\n      const { registerObj } = useSelector(state => state.formRegisterSlice)\n      //const { stateCheckbox } = useSelector(state => state.formRegisterSlice)\n      //const { v4: uuidv4 } = require('uuid');\n      console.log(loginRegister);\n\n      const toggleChecked = () => {\n            setChecked(!checked)\n\n      }\n\n      const fetchData = async () => {\n            const response = await fetch(\"http://localhost:3001/users\");\n            const data = await response.json();\n            data.filter((item) => {\n                  (item.login + item.password === formValueLogin + formValuePassword);\n            })\n            console.log(data);\n\n      }\n\n\n\n\n\n      const onSubmit = (e) => {\n            if (loginRegister === 'Registration') {\n                  fetchData()\n                  e.preventDefault()\n                  const resObj = {\n                        login: formValueLogin,\n                        password: formValuePassword,\n                  };\n                  dispatch(sendingfetchForm(resObj))\n                  setFormValueLogin('');\n                  setFormValuePassword('');\n                  setChecked(false);\n            } else if (loginRegister === 'Authorization') {\n\n            }\n\n\n\n\n            dispatch(onRegistrSubmitForm(resObj))\n\n\n\n            // alert(`Статус отправки:\n            //                         login: ${resObj.login},\n            //                         password: ${resObj.password}`)\n\n      }\n\n      const optionChecked = loginRegister === 'Registration' ? \"Согласие на регистрацию\" : 'Согласие на авторизацию';\n      const optionH1 = loginRegister === 'Registration' ? \"Форма регистрации\" : 'Форма авторизации';\n\n      return (\n            <div className='wrapper__register'>\n                  <div className='form_registr'>\n                        <h1>{optionH1}</h1>\n                        <form onSubmit={onSubmit} className='forma__registration'>\n                              <label htmlFor=\"login\">Логин: </label>\n                              <input\n                                    className=\"form-control\"\n                                    type=\"text\"\n                                    required\n                                    onChange={(e) => setFormValueLogin(e.target.value)}\n                                    name=\"login\"\n                                    value={formValueLogin}\n                                    id=\"login\"\n                                    placeholder=\"Введите логин\" />\n                              <label htmlFor=\"password\" className='forma__registration'> Пароль:</label>\n                              <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    required\n                                    onChange={(e) => setFormValuePassword(e.target.value)}\n                                    name=\"password\"\n                                    value={formValuePassword}\n                                    id=\"password\"\n                                    placeholder=\"Введите пароль\"\n                              />\n\n                              <label htmlFor=\"element\" className=\"forma__registration\">Регистрация/Авторизация</label>\n                              <select\n                                    required\n                                    onChange={(e) => setloginRegister(e.target.value)}\n                                    className=\"form-select\"\n                                    id=\"element\"\n                                    value={loginRegister}\n                                    name=\"element\"\n                              >\n                                    <option></option>\n                                    <option value=\"Registration\">Регистрация</option>\n                                    <option value=\"Authorization\">Авторизация</option>\n\n                              </select>\n\n                              <label htmlFor='happy' className={checked ? 'custom-label custom-checkbox-active' : 'custom-label'}>\n                                    <input id=\"happy\"\n                                          type=\"checkbox\"\n                                          onChange={toggleChecked}\n                                          className='custom-checkbox'\n                                          checked={checked}\n                                    />{optionChecked}\n                              </label>\n                              <button\n                                    disabled={!loginRegister || !checked || !formValuePassword || !formValueLogin} type=\"submit\" className=\"btn btn-primary forma__registration\">отправить</button>\n                        </form>\n\n                  </div>\n            </div>\n\n      );\n}\n\nexport default FormRegisr;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}