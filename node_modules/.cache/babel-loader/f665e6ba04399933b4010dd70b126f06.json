{"ast":null,"code":"var _jsxFileName = \"/Users/maximih1108/Desktop/\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442/App_DZ_Form/src/components/forms/Forms.js\";\nimport React from 'react';\nimport './forms.scss';\nimport Input from './inputs/Input';\nimport { Formik, Form } from 'formik';\nimport { initialValues } from './helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fofms = () => {\n  return /*#__PURE__*/_jsxDEV(Formik\n  // initialValues={initialValues}\n  // validate={values => {\n  //       const errors = {};\n  //       if (!values.email) {\n  //             errors.email = 'Required';\n  //       } else if (\n  //             !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n  //       ) {\n  //             errors.email = 'Invalid email address';\n  //       }\n  //       return errors;\n  // }}\n  // onSubmit={(values, { setSubmitting }) => {\n\n  // }}\n  , {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        id: email,\n        name: email,\n        lable: Email,\n        placeholder: \"введите email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }, this);\n};\n_c = Fofms;\nexport default Fofms;\nvar _c;\n$RefreshReg$(_c, \"Fofms\");","map":{"version":3,"names":["React","Input","Formik","Form","initialValues","jsxDEV","_jsxDEV","Fofms","children","className","id","email","name","lable","Email","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/forms/Forms.js"],"sourcesContent":["import React from 'react';\nimport './forms.scss'\nimport Input from './inputs/Input';\nimport { Formik, Form } from 'formik';\nimport { initialValues } from './helper';\n\n\nconst Fofms = () => {\n      return (\n            <Formik\n            // initialValues={initialValues}\n            // validate={values => {\n            //       const errors = {};\n            //       if (!values.email) {\n            //             errors.email = 'Required';\n            //       } else if (\n            //             !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n            //       ) {\n            //             errors.email = 'Invalid email address';\n            //       }\n            //       return errors;\n            // }}\n            // onSubmit={(values, { setSubmitting }) => {\n\n            // }}\n            >\n                  <Form className='form'>\n                        <Input id={email} name={email} lable={Email} placeholder={\"введите email\"} />\n                  </Form>\n            </Formik>\n\n      );\n}\n\nexport default Fofms;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB,OAAOC,KAAK,MAAM,gBAAgB;AAClC,SAASC,MAAM,EAAEC,IAAI,QAAQ,QAAQ;AACrC,SAASC,aAAa,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EACd,oBACMD,OAAA,CAACJ;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EAAA;IAAAM,QAAA,eAEMF,OAAA,CAACH,IAAI;MAACM,SAAS,EAAC,MAAM;MAAAD,QAAA,eAChBF,OAAA,CAACL,KAAK;QAACS,EAAE,EAAEC,KAAM;QAACC,IAAI,EAAED,KAAM;QAACE,KAAK,EAAEC,KAAM;QAACC,WAAW,EAAE;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAGrB,CAAC;AAAAC,EAAA,GAzBKb,KAAK;AA2BX,eAAeA,KAAK;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}