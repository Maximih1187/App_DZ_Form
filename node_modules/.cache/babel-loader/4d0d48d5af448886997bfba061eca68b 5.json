{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const fetchForm = createAsyncThunk('formRegisterSlice/fetchForm', async function () {\n  try {\n    const response = await fetch(\"http://localhost:3001/users\", {\n      method: 'GET',\n      body: registerObj\n    });\n    if (!response.ok) {\n      throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n    }\n    const data = await response.json().then(res => res.data.results[0].thumbnail.path + \".\" + res.data.results[0].thumbnail.extension);\n    return data;\n  } catch (error) {\n    throw rejectWithValue(error.massage);\n  }\n});\nconst initialState = {\n  registerObj: []\n};\nconst formRegisterSlice = createSlice({\n  name: \"formRegisterSlice\",\n  initialState,\n  reducers: {\n    onRegistrSubmitForm: (state, action) => {\n      state.registerObj.push(action.payload);\n    }\n  }\n});\nconst {\n  reducer,\n  actions\n} = formRegisterSlice;\nexport default reducer;\nexport const {\n  onRegistrSubmitForm\n} = actions;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchForm","response","fetch","method","body","registerObj","ok","Error","url","status","data","json","then","res","results","thumbnail","path","extension","error","rejectWithValue","massage","initialState","formRegisterSlice","name","reducers","onRegistrSubmitForm","state","action","push","payload","reducer","actions"],"sources":["/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/pages/slicePages/formRegisterSlice.jsx"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchForm = createAsyncThunk(\n      'formRegisterSlice/fetchForm',\n      async function () {\n            try {\n                  const response = await fetch(\"http://localhost:3001/users\", { method: 'GET', body: registerObj, })\n\n                  if (!response.ok) {\n                        throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n                  }\n                  const data = await response.json()\n                        .then(res => res.data.results[0].thumbnail.path + \".\" + res.data.results[0].thumbnail.extension)\n\n                  return data;\n            } catch (error) {\n                  throw (rejectWithValue(error.massage))\n            }\n      }\n)\n\nconst initialState = {\n      registerObj: [],\n}\n\n\nconst formRegisterSlice = createSlice({\n      name: \"formRegisterSlice\",\n      initialState,\n      reducers: {\n            onRegistrSubmitForm: (state, action) => {\n                  state.registerObj.push(action.payload)\n            },\n      },\n})\n\n\nconst { reducer, actions } = formRegisterSlice;\n\nexport default reducer;\nexport const { onRegistrSubmitForm } = actions;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,SAAS,GAAGD,gBAAgB,CACnC,6BAA6B,EAC7B,kBAAkB;EACZ,IAAI;IACE,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MAAEC,MAAM,EAAE,KAAK;MAAEC,IAAI,EAAEC;IAAa,CAAC,CAAC;IAElG,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;MACZ,MAAM,IAAIC,KAAK,CAAE,mBAAkBC,GAAI,aAAYP,QAAQ,CAACQ,MAAO,EAAC,CAAC;IAC3E;IACA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAC3BC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACH,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,CAACC,SAAS,CAACC,IAAI,GAAG,GAAG,GAAGH,GAAG,CAACH,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,CAACC,SAAS,CAACE,SAAS,CAAC;IAEtG,OAAOP,IAAI;EACjB,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACV,MAAOC,eAAe,CAACD,KAAK,CAACE,OAAO,CAAC;EAC3C;AACN,CACN,CAAC;AAED,MAAMC,YAAY,GAAG;EACfhB,WAAW,EAAE;AACnB,CAAC;AAGD,MAAMiB,iBAAiB,GAAGxB,WAAW,CAAC;EAChCyB,IAAI,EAAE,mBAAmB;EACzBF,YAAY;EACZG,QAAQ,EAAE;IACJC,mBAAmB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAClCD,KAAK,CAACrB,WAAW,CAACuB,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC5C;EACN;AACN,CAAC,CAAC;AAGF,MAAM;EAAEC,OAAO;EAAEC;AAAQ,CAAC,GAAGT,iBAAiB;AAE9C,eAAeQ,OAAO;AACtB,OAAO,MAAM;EAAEL;AAAoB,CAAC,GAAGM,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}