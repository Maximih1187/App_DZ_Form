{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n// const _apiKey = \"4ca4e0f7a1c0e3bdc1240a5027d68f5f\";\n// const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n\nexport const fetchChars = createAsyncThunk('aboutSlice/fetchChars', async function (url, rejectWithValue) {\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n    }\n    const data = await response.json().then(res => res.data.results);\n    return data;\n  } catch (error) {\n    throw rejectWithValue(error.massage);\n  }\n});\nexport const fetchChar = createAsyncThunk('aboutSlice/fetchChar', async function (id, rejectWithValue) {\n  try {\n    const response = await fetch(`https://gateway.marvel.com:443/v1/public/characters/${id}?apikey=4ca4e0f7a1c0e3bdc1240a5027d68f5f`);\n    if (!response.ok) {\n      throw new Error(`Could not fetch ${id}, status: ${response.status}`);\n    }\n    const data = await response.json().then(res => res.data.results[0].thumbnail.path + \".\" + res.data.results[0].thumbnail.extension);\n    return data;\n  } catch (error) {\n    throw rejectWithValue(error.massage);\n  }\n});\nconst serviceChars = chars => chars.map(char => {\n  console.log(1);\n  return {\n    id: char.id,\n    name: char.name,\n    description: char.description,\n    thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension\n    // homepage: char.urls[0].url,\n    // wiki: char.urls[1].url,\n    // comics: char.comics.items,\n  };\n});\nconst initialState = {\n  chars: [],\n  char: '',\n  status: '',\n  statusChar: '',\n  error: null,\n  idDescr: []\n};\nconst aboutSlice = createSlice({\n  name: 'aboutSlice',\n  initialState,\n  reducers: {\n    getIdDescription: (state, action) => {\n      tate.idDescr = state.idDescr.map(item => {\n        if (action.payload !== item) {\n          state.idDescr.push(action.payload);\n        }\n        return;\n      });\n    },\n    getDescriptions: (state, action) => {\n      state.char = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchChars.pending, state => {\n      state.status = \"Loading\";\n    }).addCase(fetchChars.fulfilled, (state, action) => {\n      state.status = \"fulfilled\";\n      state.chars = serviceChars(action.payload);\n    }).addCase(fetchChars.rejected, (state, action) => {\n      state.status = 'Error';\n      state.error = action.payload;\n    }).addCase(fetchChar.pending, state => {\n      state.statusChar = \"Loading\";\n    }).addCase(fetchChar.fulfilled, (state, action) => {\n      state.statusChar = \"fulfilled\";\n      state.char = action.payload;\n    }).addCase(fetchChar.rejected, (state, action) => {\n      state.statusChar = 'Error';\n      state.error = action.payload;\n    });\n  }\n});\nconst {\n  actions,\n  reducer\n} = aboutSlice;\nexport default reducer;\nexport const {\n  getIdDescription,\n  getDescriptions\n} = actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchChars","url","rejectWithValue","response","fetch","ok","Error","status","data","json","then","res","results","error","massage","fetchChar","id","thumbnail","path","extension","serviceChars","chars","map","char","console","log","name","description","initialState","statusChar","idDescr","aboutSlice","reducers","getIdDescription","state","action","tate","item","payload","push","getDescriptions","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/pages/slicePages/aboutSlice.jsx"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n// const _apiKey = \"4ca4e0f7a1c0e3bdc1240a5027d68f5f\";\n// const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n\nexport const fetchChars = createAsyncThunk(\n      'aboutSlice/fetchChars',\n\n      async function (url, rejectWithValue) {\n\n\n            try {\n                  const response = await fetch(url)\n\n                  if (!response.ok) {\n                        throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n                  }\n                  const data = await response.json()\n                        .then(res => res.data.results)\n                  return data;\n            } catch (error) {\n                  throw (rejectWithValue(error.massage))\n            }\n      }\n);\n\nexport const fetchChar = createAsyncThunk(\n      'aboutSlice/fetchChar',\n      async function (id, rejectWithValue) {\n            try {\n                  const response = await fetch(`https://gateway.marvel.com:443/v1/public/characters/${id}?apikey=4ca4e0f7a1c0e3bdc1240a5027d68f5f`)\n\n                  if (!response.ok) {\n                        throw new Error(`Could not fetch ${id}, status: ${response.status}`);\n                  }\n                  const data = await response.json()\n                        .then(res => res.data.results[0].thumbnail.path + \".\" + res.data.results[0].thumbnail.extension)\n\n                  return data;\n            } catch (error) {\n                  throw (rejectWithValue(error.massage))\n            }\n      }\n)\n\nconst serviceChars = (chars) => chars.map(char => {\n      console.log(1);\n      return {\n            id: char.id,\n            name: char.name,\n            description: char.description,\n            thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n            // homepage: char.urls[0].url,\n            // wiki: char.urls[1].url,\n            // comics: char.comics.items,\n\n      };\n})\n\nconst initialState = {\n      chars: [],\n      char: '',\n      status: '',\n      statusChar: '',\n      error: null,\n      idDescr: [],\n}\n\nconst aboutSlice = createSlice({\n      name: 'aboutSlice',\n      initialState,\n      reducers: {\n            getIdDescription: (state, action) => {\n                  tate.idDescr = state.idDescr.map((item) => {\n                        if (action.payload !== item) {\n                              state.idDescr.push(action.payload)\n                        } return\n                  })\n            },\n            getDescriptions: (state, action) => {\n                  state.char = action.payload\n\n            }\n      },\n      extraReducers: (builder) => {\n            builder\n                  .addCase(fetchChars.pending, (state) => {\n                        state.status = \"Loading\"\n                  })\n                  .addCase(fetchChars.fulfilled, (state, action) => {\n                        state.status = \"fulfilled\";\n                        state.chars = serviceChars(action.payload)\n                  })\n                  .addCase(fetchChars.rejected, (state, action) => {\n                        state.status = 'Error';\n                        state.error = action.payload\n                  })\n                  .addCase(fetchChar.pending, (state) => {\n                        state.statusChar = \"Loading\"\n                  })\n                  .addCase(fetchChar.fulfilled, (state, action) => {\n                        state.statusChar = \"fulfilled\";\n                        state.char = action.payload\n                  })\n                  .addCase(fetchChar.rejected, (state, action) => {\n                        state.statusChar = 'Error';\n                        state.error = action.payload\n                  })\n      }\n\n})\n\nconst { actions, reducer } = aboutSlice;\nexport default reducer;\nexport const { getIdDescription, getDescriptions } = actions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}