[{"/Users/maximih1108/Desktop/Проект/Дз/src/index.js":"1","/Users/maximih1108/Desktop/Проект/Дз/src/components/app/App.js":"2","/Users/maximih1108/Desktop/Проект/Дз/src/store/index.js":"3","/Users/maximih1108/Desktop/Проект/Дз/src/components/heroesList/HeroesList.js":"4","/Users/maximih1108/Desktop/Проект/Дз/src/components/heroesAddForm/HeroesAddForm.js":"5","/Users/maximih1108/Desktop/Проект/Дз/src/components/heroesFilters/HeroesFilters.js":"6","/Users/maximih1108/Desktop/Проект/Дз/src/hooks/http.hook.js":"7","/Users/maximih1108/Desktop/Проект/Дз/src/components/heroesListItem/HeroesListItem.js":"8","/Users/maximih1108/Desktop/Проект/Дз/src/components/spinner/Spinner.js":"9","/Users/maximih1108/Desktop/Проект/Дз/src/reducers/index.js":"10","/Users/maximih1108/Desktop/Проект/Дз/src/actions/index.js":"11"},{"size":361,"mtime":1634396966000,"results":"12","hashOfConfig":"13"},{"size":546,"mtime":1634405434000,"results":"14","hashOfConfig":"13"},{"size":209,"mtime":1634406749000,"results":"15","hashOfConfig":"13"},{"size":1910,"mtime":1713894985114,"results":"16","hashOfConfig":"13"},{"size":3671,"mtime":1713885231373,"results":"17","hashOfConfig":"13"},{"size":1291,"mtime":1634469925000,"results":"18","hashOfConfig":"13"},{"size":894,"mtime":1634405557000,"results":"19","hashOfConfig":"13"},{"size":1741,"mtime":1713894954029,"results":"20","hashOfConfig":"13"},{"size":217,"mtime":1634410092000,"results":"21","hashOfConfig":"13"},{"size":692,"mtime":1634406402000,"results":"22","hashOfConfig":"13"},{"size":314,"mtime":1634406447000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"k43p3u",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/maximih1108/Desktop/Проект/Дз/src/index.js",[],["48","49"],"/Users/maximih1108/Desktop/Проект/Дз/src/components/app/App.js",[],"/Users/maximih1108/Desktop/Проект/Дз/src/store/index.js",[],"/Users/maximih1108/Desktop/Проект/Дз/src/components/heroesList/HeroesList.js",[],"/Users/maximih1108/Desktop/Проект/Дз/src/components/heroesAddForm/HeroesAddForm.js",["50","51"],"\n\n// Задача для этого компонента:\n// Реализовать создание нового героя с введенными данными. Он должен попадать\n// в общее состояние и отображаться в списке + фильтроваться\n// Уникальный идентификатор персонажа можно сгенерировать через uiid\n// Усложненная задача:\n// Персонаж создается и в файле json при помощи метода POST\n// Дополнительно:\n// Элементы <option></option> желательно сформировать на базе\n// данных из фильтров'\n\n//import { useDispatch } from \"react-redux\";\n//import { heroesFetched } from '../../actions';\nimport { useCallback, useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst HeroesAddForm = () => {\n    const [name, setName] = useState('')\n    const [text, setText] = useState('')\n    const [element, setElement] = useState('')\n    // const dispatch = useDispatch()\n    const { v4: uuidv4 } = require('uuid');\n\n\n\n\n    const hendelSubmit = () => {\n        const res = {\n            id: uuidv4(),\n            name: name,\n            description: text,\n            element: element,\n        }\n        console.log(res);\n        fetch(\"http://localhost:3001/heroes\", {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(res)\n        })\n\n    }\n\n    return (\n        <form onSubmit={hendelSubmit} className=\"border p-4 shadow-lg rounded\">\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\n                <input\n                    required\n                    onChange={(e) => setName(e.target.value)}\n                    type=\"text\"\n                    name=\"name\"\n                    className=\"form-control\"\n                    value={name}\n                    id=\"name\"\n                    placeholder=\"Как меня зовут?\" />\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\n                <input\n                    required\n                    onChange={(e) => setText(e.target.value)}\n                    name=\"text\"\n                    className=\"form-control\"\n                    id=\"text\"\n                    placeholder=\"Что я умею?\"\n                    value={text}\n                    style={{ \"height\": '130px' }} />\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\n                <select\n                    required\n                    onChange={(e) => setElement(e.target.value)}\n                    className=\"form-select\"\n                    id=\"element\"\n                    value={element}\n                    name=\"element\">\n\n                    <option >Я владею элементом...</option>\n                    <option value=\"fire\">Огонь</option>\n                    <option value=\"water\">Вода</option>\n                    <option value=\"wind\">Ветер</option>\n                    <option value=\"earth\">Земля</option>\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\n        </form>\n    )\n\n}\nexport default HeroesAddForm;\n","/Users/maximih1108/Desktop/Проект/Дз/src/components/heroesFilters/HeroesFilters.js",[],"/Users/maximih1108/Desktop/Проект/Дз/src/hooks/http.hook.js",[],"/Users/maximih1108/Desktop/Проект/Дз/src/components/heroesListItem/HeroesListItem.js",[],"/Users/maximih1108/Desktop/Проект/Дз/src/components/spinner/Spinner.js",[],"/Users/maximih1108/Desktop/Проект/Дз/src/reducers/index.js",[],"/Users/maximih1108/Desktop/Проект/Дз/src/actions/index.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":15,"column":10,"nodeType":"58","messageId":"59","endLine":15,"endColumn":21},{"ruleId":"56","severity":1,"message":"60","line":16,"column":16,"nodeType":"58","messageId":"59","endLine":16,"endColumn":22},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'uuidv4' is defined but never used.","no-global-assign","no-unsafe-negation"]