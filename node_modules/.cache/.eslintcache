[{"/Users/maximih1108/Desktop/Проект/Дз/src/index.js":"1","/Users/maximih1108/Desktop/Проект/Дз/src/components/app/App.js":"2","/Users/maximih1108/Desktop/Проект/Дз/src/store/index.js":"3","/Users/maximih1108/Desktop/Проект/Дз/src/components/heroesList/HeroesList.js":"4","/Users/maximih1108/Desktop/Проект/Дз/src/components/heroesAddForm/HeroesAddForm.js":"5","/Users/maximih1108/Desktop/Проект/Дз/src/components/heroesFilters/HeroesFilters.js":"6","/Users/maximih1108/Desktop/Проект/Дз/src/hooks/http.hook.js":"7","/Users/maximih1108/Desktop/Проект/Дз/src/components/heroesListItem/HeroesListItem.js":"8","/Users/maximih1108/Desktop/Проект/Дз/src/components/spinner/Spinner.js":"9","/Users/maximih1108/Desktop/Проект/Дз/src/reducers/index.js":"10","/Users/maximih1108/Desktop/Проект/Дз/src/actions/index.js":"11","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/index.js":"12","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/app/App.js":"13","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/store/index.js":"14","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/heroesFilters/HeroesFilters.js":"15","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/heroesList/HeroesList.js":"16","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/heroesAddForm/HeroesAddForm.js":"17","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/heroesListItem/HeroesListItem.js":"18","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/spinner/Spinner.js":"19","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/hooks/http.hook.js":"20","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/heroesList/heroesSlice.jsx":"21","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/heroesFilters/filterSlice.jsx":"22","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/heroesAddForm/heroesAddSlice.jsx":"23","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/header/Header.js":"24","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/footer/Footer.js":"25","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/pages/main.js":"26","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/pages/FormRegisr.js":"27","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/pages/About.js":"28","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/pages/Main.js":"29","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/pages/Hi.js":"30","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/pages/ImportPages.js":"31","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/pages/slicePages/aboutSlice.jsx":"32","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/pages/slicePages/formRegisterSlice.jsx":"33","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/aboutChars/AboutChars.js":"34","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/pages/Cart.js":"35","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/forms/Forms.js":"36","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/forms/inputs/Input.js":"37","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/forms/helper.js":"38","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/forms/button/Button.js":"39"},{"size":361,"mtime":1634396966000,"results":"40","hashOfConfig":"41"},{"size":546,"mtime":1634405434000,"results":"42","hashOfConfig":"41"},{"size":209,"mtime":1634406749000,"results":"43","hashOfConfig":"41"},{"size":1910,"mtime":1713894985114,"results":"44","hashOfConfig":"41"},{"size":3671,"mtime":1713885231373,"results":"45","hashOfConfig":"41"},{"size":1291,"mtime":1634469925000,"results":"46","hashOfConfig":"41"},{"size":894,"mtime":1634405557000,"results":"47","hashOfConfig":"41"},{"size":1741,"mtime":1713894954029,"results":"48","hashOfConfig":"41"},{"size":217,"mtime":1634410092000,"results":"49","hashOfConfig":"41"},{"size":692,"mtime":1634406402000,"results":"50","hashOfConfig":"41"},{"size":314,"mtime":1634406447000,"results":"51","hashOfConfig":"41"},{"size":403,"mtime":1716217615122,"results":"52","hashOfConfig":"53"},{"size":672,"mtime":1716217615114,"results":"54","hashOfConfig":"53"},{"size":895,"mtime":1716217615123,"results":"55","hashOfConfig":"53"},{"size":1176,"mtime":1716217615117,"results":"56","hashOfConfig":"53"},{"size":1704,"mtime":1716217615118,"results":"57","hashOfConfig":"53"},{"size":2630,"mtime":1716217615116,"results":"58","hashOfConfig":"53"},{"size":1703,"mtime":1716217615118,"results":"59","hashOfConfig":"53"},{"size":217,"mtime":1713897514856,"results":"60","hashOfConfig":"53"},{"size":534,"mtime":1716217615122,"results":"61","hashOfConfig":"53"},{"size":1365,"mtime":1716217615118,"results":"62","hashOfConfig":"53"},{"size":1252,"mtime":1716217615117,"results":"63","hashOfConfig":"53"},{"size":870,"mtime":1716217615116,"results":"64","hashOfConfig":"53"},{"size":2203,"mtime":1716649031070,"results":"65","hashOfConfig":"53"},{"size":616,"mtime":1716217615115,"results":"66","hashOfConfig":"53"},{"size":610,"mtime":1716217615120,"results":"67","hashOfConfig":"53"},{"size":8673,"mtime":1717424599573,"results":"68","hashOfConfig":"53"},{"size":1203,"mtime":1716704552097,"results":"69","hashOfConfig":"53"},{"size":624,"mtime":1715272736852,"results":"70","hashOfConfig":"53"},{"size":989,"mtime":1716570020174,"results":"71","hashOfConfig":"53"},{"size":252,"mtime":1716217615120,"results":"72","hashOfConfig":"53"},{"size":5104,"mtime":1716663613213,"results":"73","hashOfConfig":"53"},{"size":2030,"mtime":1716217615122,"results":"74","hashOfConfig":"53"},{"size":2060,"mtime":1716660980496,"results":"75","hashOfConfig":"53"},{"size":1809,"mtime":1716648974525,"results":"76","hashOfConfig":"53"},{"size":1184,"mtime":1717430165376,"results":"77","hashOfConfig":"53"},{"size":582,"mtime":1717429059985,"results":"78","hashOfConfig":"53"},{"size":824,"mtime":1717429029574,"results":"79","hashOfConfig":"53"},{"size":210,"mtime":1717315011516,"results":"80","hashOfConfig":"53"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"k43p3u",{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"7ts5vo",{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"107"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"107"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"107"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"107"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"107"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"107"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"107"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"107"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"107"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"/Users/maximih1108/Desktop/Проект/Дз/src/index.js",[],["173","174"],"/Users/maximih1108/Desktop/Проект/Дз/src/components/app/App.js",[],"/Users/maximih1108/Desktop/Проект/Дз/src/store/index.js",[],"/Users/maximih1108/Desktop/Проект/Дз/src/components/heroesList/HeroesList.js",[],"/Users/maximih1108/Desktop/Проект/Дз/src/components/heroesAddForm/HeroesAddForm.js",["175","176"],"\n\n// Задача для этого компонента:\n// Реализовать создание нового героя с введенными данными. Он должен попадать\n// в общее состояние и отображаться в списке + фильтроваться\n// Уникальный идентификатор персонажа можно сгенерировать через uiid\n// Усложненная задача:\n// Персонаж создается и в файле json при помощи метода POST\n// Дополнительно:\n// Элементы <option></option> желательно сформировать на базе\n// данных из фильтров'\n\n//import { useDispatch } from \"react-redux\";\n//import { heroesFetched } from '../../actions';\nimport { useCallback, useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst HeroesAddForm = () => {\n    const [name, setName] = useState('')\n    const [text, setText] = useState('')\n    const [element, setElement] = useState('')\n    // const dispatch = useDispatch()\n    const { v4: uuidv4 } = require('uuid');\n\n\n\n\n    const hendelSubmit = () => {\n        const res = {\n            id: uuidv4(),\n            name: name,\n            description: text,\n            element: element,\n        }\n        console.log(res);\n        fetch(\"http://localhost:3001/heroes\", {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(res)\n        })\n\n    }\n\n    return (\n        <form onSubmit={hendelSubmit} className=\"border p-4 shadow-lg rounded\">\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\n                <input\n                    required\n                    onChange={(e) => setName(e.target.value)}\n                    type=\"text\"\n                    name=\"name\"\n                    className=\"form-control\"\n                    value={name}\n                    id=\"name\"\n                    placeholder=\"Как меня зовут?\" />\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\n                <input\n                    required\n                    onChange={(e) => setText(e.target.value)}\n                    name=\"text\"\n                    className=\"form-control\"\n                    id=\"text\"\n                    placeholder=\"Что я умею?\"\n                    value={text}\n                    style={{ \"height\": '130px' }} />\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\n                <select\n                    required\n                    onChange={(e) => setElement(e.target.value)}\n                    className=\"form-select\"\n                    id=\"element\"\n                    value={element}\n                    name=\"element\">\n\n                    <option >Я владею элементом...</option>\n                    <option value=\"fire\">Огонь</option>\n                    <option value=\"water\">Вода</option>\n                    <option value=\"wind\">Ветер</option>\n                    <option value=\"earth\">Земля</option>\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\n        </form>\n    )\n\n}\nexport default HeroesAddForm;\n","/Users/maximih1108/Desktop/Проект/Дз/src/components/heroesFilters/HeroesFilters.js",[],"/Users/maximih1108/Desktop/Проект/Дз/src/hooks/http.hook.js",[],"/Users/maximih1108/Desktop/Проект/Дз/src/components/heroesListItem/HeroesListItem.js",[],"/Users/maximih1108/Desktop/Проект/Дз/src/components/spinner/Spinner.js",[],"/Users/maximih1108/Desktop/Проект/Дз/src/reducers/index.js",[],"/Users/maximih1108/Desktop/Проект/Дз/src/actions/index.js",[],"/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/index.js",[],["177","178"],"/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/app/App.js",[],"/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/store/index.js",["179"],"\nimport heroes from '../components/heroesList/heroesSlice';\nimport filter from '../components/heroesFilters/filterSlice'\nimport heroesAdd from '../components/heroesAddForm/heroesAddSlice';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport aboutSlice from '../components/pages/slicePages/aboutSlice'\nimport formRegisterSlice from '../components/pages/slicePages/formRegisterSlice'\n\n\nconst stringMiddleware = () => (next) => (action) => {\n      if (typeof action === \"string\") {\n            return next({\n                  type: action\n            })\n      }\n      return next(action)\n}\n\nconst store = configureStore({\n      reducer: { heroes, filter, heroesAdd, aboutSlice, formRegisterSlice },\n      middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware),\n      devTools: process.env.NODE_ENV !== 'production'\n})\n\nexport default store;\n","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/heroesFilters/HeroesFilters.js",["180"],"\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { categoryFilter, buttonFilterFetch } from '../heroesFilters/filterSlice';\n\nconst HeroesFilters = () => {\n\n    const { category, stateButtons } = useSelector(state => state.filter)\n    const dispath = useDispatch()\n\n    useEffect(() => {\n        dispath(buttonFilterFetch());\n    }, []);\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    {stateButtons.map((item) => {\n                        return <button\n                            onClick={(e) => dispath(categoryFilter(e.target.id))}\n                            id={item.key}\n                            key={item.key}\n                            disabled={category === item.key}\n                            className={item.className}\n                        >{item.name}</button>\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;\n","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/heroesList/HeroesList.js",["181"],"\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchHeroes, selectAll } from './heroesSlice';\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from '../spinner/Spinner';\nimport { createSelector } from '@reduxjs/toolkit';\n\n\nconst HeroesList = () => {\n    const { heroesLoadingStatus } = useSelector(state => state.heroes);\n\n    const filterHeroesSelector = createSelector(\n        (state) => state.filter.category,\n        selectAll,\n        (filter, heroes) => {\n            if (filter === 'all') {\n                return heroes;\n            } else {\n                return heroes.filter(item => item.element === filter)\n            }\n        }\n    )\n\n    const [stateDelete, setStateDelete] = useState(false);\n    const dispatch = useDispatch();\n\n    const res = useSelector(filterHeroesSelector)\n\n\n\n    useEffect(() => {\n        setStateDelete(true);\n        dispatch(fetchHeroes());\n\n    }, [stateDelete]);\n\n\n\n    if (heroesLoadingStatus === \"loading\") {\n        return <Spinner />;\n    } else if (heroesLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    };\n\n\n\n    const renderHeroesList = (arr) => {\n\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">Героев пока нет</h5>\n        }\n        return arr.map(({ id, ...props }) => {\n            return <HeroesListItem id={id} key={id} setStateDelete={setStateDelete} {...props} />\n        })\n    };\n\n\n    const elements = renderHeroesList(res);\n\n\n\n    return (\n        <ul>\n            {elements}\n        </ul>\n    )\n}\n\nexport default HeroesList;\n","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/heroesAddForm/HeroesAddForm.js",[],"/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/heroesListItem/HeroesListItem.js",[],"/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/spinner/Spinner.js",[],"/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/hooks/http.hook.js",[],"/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/heroesList/heroesSlice.jsx",[],"/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/heroesFilters/filterSlice.jsx",[],"/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/heroesAddForm/heroesAddSlice.jsx",[],"/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/header/Header.js",["182","183","184"],"import React from 'react';\nimport './header.scss'\nimport { NavLink } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useMemo } from 'react';\n\nimport { onToggleAuthorization } from \"../pages/slicePages/formRegisterSlice\"\nimport { fetchChars } from '../pages/slicePages/aboutSlice';\n\nconst Header = () => {\n  const urlAllChars = \"https://gateway.marvel.com:443/v1/public/characters?limit=5&apikey=4ca4e0f7a1c0e3bdc1240a5027d68f5f\"\n\n  const { stateAuthorization } = useSelector(state => state.formRegisterSlice)\n  const shoppingCart = useSelector(state => state.aboutSlice.shoppingCart)\n  const dispatch = useDispatch()\n  const registrStatus = stateAuthorization[0] === false ? 'Регистрация' : stateAuthorization[1]\n  // useEffect(() => {\n  // }, []);\n  const fetchData = useMemo(() => {\n    dispatch(fetchChars(urlAllChars))\n  }, [urlAllChars])\n\n  const navLinkStyles = ({ isActive }) => {\n\n    return {\n      fontWeight: isActive ? \"bold\" : \"normal\",\n      color: isActive ? 'rgb(227, 125, 125)' : \"azure\"\n    };\n  };\n  const countCharsCart = shoppingCart.length\n\n  return (\n    <header className='header'>\n\n      <div className='container'>\n        <ul className='header_nav'>\n          <NavLink style={navLinkStyles} to=\"/register\" className='header_nav-list'>{registrStatus}</NavLink>\n          <NavLink style={navLinkStyles} to=\"/\" className='header_nav-list'>Информация</NavLink>\n          <NavLink style={navLinkStyles} to=\"/about\" className='header_nav-list'>Все</NavLink>\n          {/* <NavLink style={navLinkStyles} to=\"/hi\" className='header_nav-list'>Карзина</NavLink> */}\n          {stateAuthorization[0] === true ? <NavLink className='header_nav-list'\n            onClick={() => dispatch(onToggleAuthorization([false]))\n            }>Выйти</NavLink> : null}\n        </ul>\n\n      </div>\n      <NavLink to=\"/hi\" className=\"heder__cart-img\">\n        <img src=\"https://img.icons8.com/?size=100&id=8AWSfZqmVTZJ&format=png&color=FFFFFF\" alt=\"Картинка карзины\" />\n        <span className='heder__cart-count'>{countCharsCart}</span>\n      </NavLink>\n    </header>\n  );\n}\n\nexport default Header;\n","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/footer/Footer.js",[],"/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/pages/main.js",[],"/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/pages/FormRegisr.js",["185","186","187","188","189"],"\nimport { useEffect, useState } from 'react';\nimport './scssPages/formRegistr.scss'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sendingfetchForm, fetchDbFilter, onToggleAuthorization } from './slicePages/formRegisterSlice';\n//import { Formik, Form, Field, ErrorMessage, useField } from 'formik';\nimport * as Yup from \"yup\"\nimport Fofms from '../forms/Forms';\n\n\n\n\nconst FormRegisr = () => {\n\n      const dispatch = useDispatch();\n\n\n      const [login, setFormValueLogin] = useState('');\n      const [password, setFormValuePassword] = useState('');\n\n\n      const [loginDirty, setLoginDirty] = useState(false)\n      const [passwordDirty, setPasswordDirty] = useState(false)\n      const [loginError, setLoginError] = useState(\"login не может быть пустым\")\n      const [passwordError, setPasswordError] = useState(\"Password не может быть пустым\")\n\n\n      const [loginRegister, setloginRegister] = useState()\n      const [resAuthorization, setResAuthorization] = useState()\n      const { registerObj, stateAuthorization } = useSelector(state => state.formRegisterSlice)\n\n\n\n\n\n      const [checked, setChecked] = useState(false)\n\n      useEffect(() => {\n            dispatch(fetchDbFilter())\n\n      }, []);\n\n      const userAuthorization = () => {\n            registerObj.map((item) => {\n                  if (item === login + password) {\n                        setResAuthorization(`${login} вы авторизованы!`);\n                        dispatch(onToggleAuthorization([true, login]))\n                  }\n\n            })\n      }\n\n      const resObj = {\n            login: login,\n            password: password,\n      };\n\n      const onSubmit = (e) => {\n            if (loginRegister === 'Registration') {\n                  //e.preventDefault()\n                  //fetchData()\n                  dispatch(sendingfetchForm(resObj))\n                  alert(`Ваш login: ${resObj.login},Ваш password: ${resObj.password}`)\n                  setFormValueLogin('');\n                  setFormValuePassword('');\n                  setChecked(false);\n            } else if (loginRegister === 'Authorization') {\n                  e.preventDefault()\n                  userAuthorization()\n                  setFormValueLogin('');\n                  setFormValuePassword('');\n                  setChecked(false);\n                  //console.log('Authorization');\n            }\n\n      }\n\n      const optionChecked = loginRegister === 'Registration' ? \"Согласие на регистрацию\" : 'Согласие на авторизацию';\n      const optionH1 = loginRegister === 'Registration' ? \"Форма регистрации\" : 'Форма авторизации';\n      const divElse = <div className='wrapper__registe-true'>Привет {stateAuthorization[1]}</div>\n\n\n      const loginHandler = (e) => {\n            setFormValueLogin(e.target.value.trim().toLowerCase())\n            if (!/^[a-zA-Z1-9]+$/.test(login)) {\n                  setLoginError('Login должен использовать латинские буквы и цифры!')\n            }\n            else if (login.length < 5 || login.length > 10) {\n                  setLoginError('Login должен быть не менее 5 и не более 8 символов')\n            }\n            else { setLoginError('') }\n\n      }\n      // !/^[a-zA-Z1-9]+$/.test(login)\n      const passwordHandler = (e) => {\n            setFormValuePassword(e.target.value.trim())\n            if (password.length < 5 || password.length > 12) {\n                  setPasswordError('Password должен быть не менее 5 и не более 8 символов!')\n            }\n            else if (password.search(/[a-z]/i) < 0) {\n                  setPasswordError('Password должен содержать как минимум одну букву ')\n            }\n            else if (password.search(/[0-9]/) < 0) {\n                  setPasswordError('Password должен содержать как минимум одну цифру ')\n            }\n            else {\n                  setPasswordError(\"\")\n            }\n      }\n\n      const blurHandler = (e) => {\n            switch (e.target.name) {\n                  case \"login\": setLoginDirty(true)\n                        break;\n                  case \"password\": setPasswordDirty(true)\n                        break;\n            }\n      }\n\n\n      return (\n            <>\n\n                  <div className='wrapper__register'>\n                        <Fofms />\n                        {!stateAuthorization[0] ? <div className='form_registr'>\n                              <h1>{optionH1}</h1>\n                              <form onSubmit={onSubmit} className='forma__registration'>\n                                    <label htmlFor=\"login\">Логин: </label>\n                                    <input\n                                          className=\"form-control\"\n                                          type=\"text\"\n                                          required\n                                          onChange={(e) => loginHandler(e)}\n                                          onBlur={(e) => { blurHandler(e) }}\n                                          name=\"login\"\n                                          value={login}\n                                          id=\"login\"\n                                          placeholder=\"Введите логин\" />\n                                    {(loginDirty && loginError) && <div style={{ \"color\": \"red\" }}> {loginError}</div>}\n                                    <label htmlFor=\"password\" className='forma__registration'> Пароль:</label>\n                                    <input\n                                          type=\"text\"\n                                          className=\"form-control\"\n                                          required\n                                          onChange={(e) => passwordHandler(e)}\n                                          name=\"password\"\n                                          value={password}\n                                          id=\"password\"\n                                          placeholder=\"Введите пароль\"\n                                          onBlur={(e) => { blurHandler(e) }}\n                                    />\n                                    {(passwordDirty && passwordError) && <div style={{ \"color\": \"red\" }}> {passwordError}</div>}\n                                    <label htmlFor=\"currency\" className=\"forma__registration\">Регистрация/Авторизация</label>\n                                    <select\n                                          required\n                                          onChange={(e) => setloginRegister(e.target.value)}\n                                          className=\"form-select\"\n                                          id=\"currency\"\n                                          value={loginRegister}\n                                          name=\"currency\"\n                                          as=\"select\"\n                                    >\n                                          <option></option>\n                                          <option value=\"Registration\">Регистрация</option>\n                                          <option value=\"Authorization\">Авторизация</option>\n\n                                    </select>\n\n                                    <label htmlFor='happy' className={checked ? 'custom-label custom-checkbox-active' : 'custom-label'}>\n                                          <input id=\"happy\"\n                                                type=\"checkbox\"\n                                                onChange={() => setChecked(!checked)}\n                                                className='custom-checkbox'\n                                                checked={checked}\n                                                name=\"terms\"\n                                          />{optionChecked}\n                                    </label>\n                                    <button\n                                          disabled={!loginRegister || !checked || passwordError || loginError}\n                                          type=\"submit\"\n                                          className=\"btn btn-primary forma__registration\">отправить\n                                    </button>\n                              </form>\n                        </div> : divElse}\n\n                  </div>\n            </>\n\n\n\n      );\n}\n\nexport default FormRegisr;\n","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/pages/About.js",[],"/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/pages/Main.js",[],["190","191"],"/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/pages/Hi.js",["192","193","194"],"\nimport { useEffect, useState } from 'react'\nimport './scssPages/hi.scss'\nimport { useSelector, useDispatch } from 'react-redux';\nimport Cart from './Cart';\n\nconst Hi = () => {\n\n  //const dispatch = useDispatch()\n  const shoppingCart = useSelector(state => state.aboutSlice.shoppingCart)\n  // const [stat, setStat] = useState([])\n\n  // useEffect(() => {\n  //   resArray()\n  // }, [shoppingCart]);\n  // console.log(stat.length);\n\n  // const resArray = (() => {\n  //   //const filteredArray = Array.from(new Set(shoppingCart));\n  //   /// setStat(filteredArray)\n  // })\n\n  return (\n    <div className='hi' >\n      <ul className=\"hi__shoppingcart-ul\">\n        {shoppingCart.length < 1 ?\n          <div className='hi__shoppingcart-empty'>\n            Список пуст!! Добавь в карзину товар!\n          </div> :\n          shoppingCart.map((item, i) => {\n            return <Cart key={i} item={item} />\n          })}\n      </ul>\n    </div>\n  );\n}\n\n\n\nexport default Hi;\n","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/pages/ImportPages.js",[],"/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/pages/slicePages/aboutSlice.jsx",["195","196"],"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n// const _apiKey = \"4ca4e0f7a1c0e3bdc1240a5027d68f5f\";\n// const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n\nexport const fetchChars = createAsyncThunk(\n      'aboutSlice/fetchChars',\n      async function (url, { rejectWithValue }) {\n\n\n            try {\n                  const response = await fetch(url)\n\n                  if (!response.ok) {\n                        throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n                  }\n                  const data = await response.json()\n                        .then(res => res.data.results)\n\n                  return data;\n            } catch (error) {\n                  throw (rejectWithValue(error.massage))\n            }\n      }\n);\n\nexport const fetchChar = createAsyncThunk(\n      'aboutSlice/fetchChar',\n      async function (id, rejectWithValue) {\n            try {\n                  const response = await fetch(`https://gateway.marvel.com:443/v1/public/characters/${id}?apikey=4ca4e0f7a1c0e3bdc1240a5027d68f5f`)\n\n                  if (!response.ok) {\n                        throw new Error(`Could not fetch ${id}, status: ${response.status}`);\n                  }\n                  const data = await response.json()\n                        .then(res => res.data.results)\n\n                  return data;\n            } catch (error) {\n                  throw (rejectWithValue(error.massage))\n            }\n      }\n)\n\nconst serviceChars = (chars) => chars.map(char => {\n      return {\n            id: char.id,\n            name: char.name,\n            description: char.description,\n            thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n            // homepage: char.urls[0].url,\n            // wiki: char.urls[1].url,\n            // comics: char.comics.items,\n\n      };\n})\n\nconst initialState = {\n      chars: [],\n      charImg: [],\n      status: '',\n      statusChar: '',\n      error: null,\n      shoppingCart: [],\n\n}\n\nconst aboutSlice = createSlice({\n      name: 'aboutSlice',\n      initialState,\n      reducers: {\n            // getIdDescription: (state, action) => {\n            //       state.idDescr = [...state.idDescr, action.payload]\n\n            //&& (!state.shoppingCart.includes(el))\n            // },\n            getDescriptions: (state, action,) => {\n                  state.charImg = action.payload\n\n            },\n            addShoppingCart: (state, action) => {\n                  state.chars.map((el) => {\n                        //console.log(!state.shoppingCart.includes());\n                        if (el.id === action.payload) {\n                              state.shoppingCart.push(el)\n                        }\n                  })\n            },\n            deleteShoppingCart: (state, action) => {\n                  state.shoppingCart = state.shoppingCart.filter((item) => item.id !== action.payload)\n\n            },\n            deleteChars: (state, action) => {\n\n                  state.chars = state.chars.filter((item) =>\n                        item.id !== action.payload)\n            },\n\n            addChardAfterDeleteChars: (state, action) => { //Добавляет в Chars из Карточного массива\n                  state.shoppingCart.map((item) => {\n                        if (item.id === action.payload) {\n                              state.chars.push(item)\n                        }\n                  })\n\n            },\n\n\n      },\n      extraReducers: (builder) => {\n            builder\n                  .addCase(fetchChars.pending, (state) => {\n                        state.status = \"Loading\"\n                  })\n                  .addCase(fetchChars.fulfilled, (state, action) => {\n                        state.status = \"fulfilled\";\n                        state.chars = serviceChars(action.payload)\n                  })\n                  .addCase(fetchChars.rejected, (state, action) => {\n                        state.status = 'error';\n                        state.error = action.payload\n                  })\n                  .addCase(fetchChar.pending, (state) => {\n                        state.statusChar = \"loading\"\n                  })\n                  .addCase(fetchChar.fulfilled, (state, action) => {\n                        state.statusChar = \"fulfilled\";\n                        state.charImg = serviceChars(action.payload)\n                  })\n                  .addCase(fetchChar.rejected, (state, action) => {\n                        state.statusChar = 'Error';\n                        state.error = action.payload\n                  })\n            // .addCase(fetchShoppingCart.fulfilled, (state, action) => {\n            //       state.statusChar = \"fulfilled\";\n            //       //state.shoppingCart.push(serviceChars(action.payload))\n            // })\n      }\n\n})\n\n\n\n\n\nconst { actions, reducer } = aboutSlice;\nexport default reducer;\nexport const {\n      getIdDescription,\n      getDescriptions,\n      addShoppingCart,\n      deleteShoppingCart,\n      deleteStateDisabl,\n      deleteChars,\n      addChardAfterDeleteChars } = actions;\n","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/pages/slicePages/formRegisterSlice.jsx",["197"],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const sendingfetchForm = createAsyncThunk(\n      \"formRegisterSlice/fetchForm\",\n      async (regObj, { dispatch }) => {\n            const response = await fetch(\"http://localhost:3001/users\", {\n                  method: 'POST',\n                  headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                  },\n                  body: JSON.stringify(regObj)\n            })\n            //const data = await response.json();\n            // dispatch(onRegistrSubmitForm(data));\n      }\n)\n\nexport const fetchDbFilter = createAsyncThunk(\n      \"formRegisterSlice/fetchDbFilter\",\n      async (_, { dispatch }) => {\n\n            const response = await fetch('http://localhost:3001/users')\n            // if (!response.ok) {\n            //       throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            // }\n            const data = await response.json()\n\n\n            dispatch(onRegistrSubmitForm(data))\n\n\n      }\n)\n\nconst initialState = {\n      stateSending: \"\",\n      registerObj: [],\n      stateAuthorization: [false,],\n}\n\nconst formRegisterSlice = createSlice({\n      name: \"formRegisterSlice\",\n      initialState,\n      reducers: {\n            onRegistrSubmitForm: (state, action) => {\n                  state.registerObj = action.payload.map((item) => {\n                        return item.login + item.password\n                  })\n            },\n            onToggleAuthorization: (state, action) => {\n                  state.stateAuthorization = action.payload\n\n            },\n\n      },\n      extraReducers: (builder) => {\n            builder\n                  .addCase(sendingfetchForm.fulfilled, (state) => {\n                        state.stateSending = 'fulfilled'\n                  })\n\n      }\n})\n\n\nconst { reducer, actions } = formRegisterSlice;\n\nexport default reducer;\nexport const { onRegistrSubmitForm, onToggleAuthorization } = actions;\n","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/aboutChars/AboutChars.js",["198","199","200","201","202"],"import React from 'react';\nimport '../pages/scssPages/about.scss'\nimport Spinner from '../spinner/Spinner';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchChars, fetchChar, fetchShoppingCart, addShoppingCart, deleteChars, addChardAfterDeleteChars } from '../pages/slicePages/aboutSlice';\nimport { useRef, useMemo, useState, useEffect } from 'react';\n\nconst AboutChars = () => {\n\n  const dispatch = useDispatch();\n  const refer = useRef([]);\n  const { chars, shoppingCart, } = useSelector(state => state.aboutSlice)\n  const [updateChar, setUpdateChar] = useState([])\n  //const [stateCart, setStateCart] = useState(false)\n  //const statusChar = useSelector(state => state.aboutSlice.statusChar)\n  // const urlAllChars = \"https://gateway.marvel.com:443/v1/public/characters?limit=25&apikey=4ca4e0f7a1c0e3bdc1240a5027d68f5f\"\n\n\n  useEffect(() => {\n    setUpdateChar(chars)\n  }, [chars])\n\n  const addCharsCart = (id) => {\n    dispatch(addShoppingCart(id))\n    dispatch(deleteChars(id))\n  }\n\n  return (\n    <div>\n      {updateChar.length === 0 ? <Spinner /> : <div>\n        {\n          updateChar.map((item, i) => {\n\n            return (\n              <li ref={(el) => (refer.current[i] = el)}\n                onClick={() => {\n                  dispatch(fetchChar(item.id));\n\n                }}\n                key={i}\n                id={item.id}\n                className='about__list' >\n                <div className='about__list-name'>{item.name}</div>\n                <div className='about__list-descr'>{item.description}</div>\n                <div className='about__list-id'>{item.id}</div>\n                <button\n                  onClick={() => {\n                    addCharsCart(item.id);\n                  // focuseItem(i, e);\n                  }}\n\n                  id={item.id}\n                  className=\"about__list-button\"\n                >\n                  добавить\n                </button>\n              </li>\n            )\n          })\n        }\n      </div>\n      }\n    </div>\n  );\n}\n\nexport default AboutChars;\n","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/pages/Cart.js",["203","204","205","206","207"],"import React from 'react';\nimport { useEffect, useState } from 'react'\nimport './scssPages/hi.scss'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteShoppingCart, addChardAfterDeleteChars } from './slicePages/aboutSlice';\n\n\nconst Cart = (props) => {\n\n\tconst dispatch = useDispatch()\n\tconst { v4: uuidv4 } = require('uuid');\n\t//const shoppingCart = useSelector(state => state.aboutSlice.shoppingCart)\n\tconst [count, setCount] = useState(1)\n\n\n\tconst deleteItem = (id) => {\n\t\tdispatch(addChardAfterDeleteChars(id))\n\t\tdispatch(deleteShoppingCart(id));\n\n\t}\n\n\tconst incr = () => {\n\t\tif (count < 10)\n\t\t\tsetCount(count + 1)\n\t}\n\tconst decr = () => {\n\t\tif (count > 1)\n\t\t\tsetCount(count - 1)\n\t}\n\n\tconst { id = Number(id), thumbnail, description, name } = props.item;\n\n\treturn (\n\t\t<>\n\n\t\t\t<li key={id} className='hi__shoppingcart-list'>\n\t\t\t\t<div className=\"hi__shoppingcart-wrapper\">\n\t\t\t\t\t<div className='hi__shoppingcart-list-name'>{name}</div>\n\t\t\t\t\t<div className='hi__shoppingcart-list-descr'>{description}</div>\n\t\t\t\t\t<img src={thumbnail} className='hi__shoppingcart-list-img'></img>\n\t\t\t\t\t<div onClick={() => deleteItem(id)} id={id} className='hi__shoppingcart-delete'>❌\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"hi__shoppingcart-select\">\n\t\t\t\t\t<div className=\"hi__shoppingcart-selector\">\n\t\t\t\t\t\t<div onClick={incr} id={id} className=\"hi__shoppingcart-selector-incr\">+</div>\n\t\t\t\t\t\t<div id={id} className=\"hi__shoppingcart-selector-summ\">{count}</div>\n\t\t\t\t\t\t<div onClick={decr} id={id} className=\"hi__shoppingcart-selector-decr\">-</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\tclassName='hi__shoppingcart-checkbox'\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t//onChange={}\n\t\t\t\t\t\t//checked={stat}\n\t\t\t\t\t\t//onClick={(e) => setStat(e)}\n\t\t\t\t\t\tname=\"terms\" />\n\t\t\t\t</div>\n\n\t\t\t</li>\n\t\t</>\n\t);\n}\n\nexport default Cart;\n","/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/forms/Forms.js",[],"/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/forms/inputs/Input.js",[],"/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/forms/helper.js",[],"/Users/maximih1108/Desktop/Проект/App_DZ_Form/src/components/forms/button/Button.js",[],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":15,"column":10,"nodeType":"214","messageId":"215","endLine":15,"endColumn":21},{"ruleId":"212","severity":1,"message":"216","line":16,"column":16,"nodeType":"214","messageId":"215","endLine":16,"endColumn":22},{"ruleId":"208","replacedBy":"217"},{"ruleId":"210","replacedBy":"218"},{"ruleId":"212","severity":1,"message":"219","line":5,"column":26,"nodeType":"214","messageId":"215","endLine":5,"endColumn":46},{"ruleId":"220","severity":1,"message":"221","line":13,"column":8,"nodeType":"222","endLine":13,"endColumn":10,"suggestions":"223"},{"ruleId":"220","severity":1,"message":"224","line":38,"column":8,"nodeType":"222","endLine":38,"endColumn":21,"suggestions":"225"},{"ruleId":"212","severity":1,"message":"226","line":5,"column":10,"nodeType":"214","messageId":"215","endLine":5,"endColumn":19},{"ruleId":"212","severity":1,"message":"227","line":19,"column":9,"nodeType":"214","messageId":"215","endLine":19,"endColumn":18},{"ruleId":"220","severity":1,"message":"228","line":21,"column":6,"nodeType":"222","endLine":21,"endColumn":19,"suggestions":"229"},{"ruleId":"212","severity":1,"message":"230","line":7,"column":13,"nodeType":"214","messageId":"215","endLine":7,"endColumn":16},{"ruleId":"212","severity":1,"message":"231","line":29,"column":14,"nodeType":"214","messageId":"215","endLine":29,"endColumn":30},{"ruleId":"220","severity":1,"message":"224","line":41,"column":10,"nodeType":"222","endLine":41,"endColumn":12,"suggestions":"232"},{"ruleId":"233","severity":1,"message":"234","line":44,"column":36,"nodeType":"235","messageId":"236","endLine":44,"endColumn":38},{"ruleId":"237","severity":1,"message":"238","line":112,"column":13,"nodeType":"239","messageId":"240","endLine":117,"endColumn":14},{"ruleId":"208","replacedBy":"241"},{"ruleId":"210","replacedBy":"242"},{"ruleId":"212","severity":1,"message":"226","line":2,"column":10,"nodeType":"214","messageId":"215","endLine":2,"endColumn":19},{"ruleId":"212","severity":1,"message":"243","line":2,"column":21,"nodeType":"214","messageId":"215","endLine":2,"endColumn":29},{"ruleId":"212","severity":1,"message":"244","line":4,"column":23,"nodeType":"214","messageId":"215","endLine":4,"endColumn":34},{"ruleId":"233","severity":1,"message":"234","line":82,"column":40,"nodeType":"235","messageId":"236","endLine":82,"endColumn":42},{"ruleId":"233","severity":1,"message":"234","line":100,"column":49,"nodeType":"235","messageId":"236","endLine":100,"endColumn":51},{"ruleId":"212","severity":1,"message":"245","line":6,"column":19,"nodeType":"214","messageId":"215","endLine":6,"endColumn":27},{"ruleId":"212","severity":1,"message":"246","line":5,"column":10,"nodeType":"214","messageId":"215","endLine":5,"endColumn":20},{"ruleId":"212","severity":1,"message":"247","line":5,"column":33,"nodeType":"214","messageId":"215","endLine":5,"endColumn":50},{"ruleId":"212","severity":1,"message":"248","line":5,"column":82,"nodeType":"214","messageId":"215","endLine":5,"endColumn":106},{"ruleId":"212","severity":1,"message":"249","line":6,"column":18,"nodeType":"214","messageId":"215","endLine":6,"endColumn":25},{"ruleId":"212","severity":1,"message":"250","line":12,"column":18,"nodeType":"214","messageId":"215","endLine":12,"endColumn":30},{"ruleId":"212","severity":1,"message":"226","line":2,"column":10,"nodeType":"214","messageId":"215","endLine":2,"endColumn":19},{"ruleId":"212","severity":1,"message":"251","line":4,"column":10,"nodeType":"214","messageId":"215","endLine":4,"endColumn":21},{"ruleId":"212","severity":1,"message":"252","line":11,"column":14,"nodeType":"214","messageId":"215","endLine":11,"endColumn":20},{"ruleId":"253","severity":1,"message":"254","line":31,"column":22,"nodeType":"214","messageId":"255","endLine":31,"endColumn":24},{"ruleId":"256","severity":1,"message":"257","line":40,"column":6,"nodeType":"258","endLine":40,"endColumn":65},"no-native-reassign",["259"],"no-negated-in-lhs",["260"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'uuidv4' is defined but never used.",["259"],["260"],"'getDefaultMiddleware' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispath'. Either include it or remove the dependency array.","ArrayExpression",["261"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["262"],"'useEffect' is defined but never used.","'fetchData' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["263"],"'Yup' is defined but never used.","'resAuthorization' is assigned a value but never used.",["264"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["259"],["260"],"'useState' is defined but never used.","'useDispatch' is defined but never used.","'response' is assigned a value but never used.","'fetchChars' is defined but never used.","'fetchShoppingCart' is defined but never used.","'addChardAfterDeleteChars' is defined but never used.","'useMemo' is defined but never used.","'shoppingCart' is assigned a value but never used.","'useSelector' is defined but never used.","'uuidv4' is assigned a value but never used.","no-use-before-define","'id' was used before it was defined.","usedBeforeDefined","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"269","fix":"271"},"Update the dependencies array to be: [dispath]",{"range":"272","text":"273"},"Update the dependencies array to be: [dispatch, stateDelete]",{"range":"274","text":"275"},"Update the dependencies array to be: [dispatch]",{"range":"276","text":"277"},{"range":"278","text":"277"},[382,384],"[dispath]",[989,1002],"[dispatch, stateDelete]",[881,894],"[dispatch]",[1215,1217]]